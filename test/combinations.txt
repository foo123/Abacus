Abacus.Combinations (VERSION = 1.0.6)
---
o = Abacus.Combination(6,3)
o.total()
20
o.next()
0,1,2
o.hasNext()
true
o.next()
0,1,3
default order is "lex", lexicographic-order
o.rewind()
[ '0,1,2', 0, 0, '0,1,2' ]
[ '0,1,3', 1, 1, '0,1,3' ]
[ '0,1,4', 2, 2, '0,1,4' ]
[ '0,1,5', 3, 3, '0,1,5' ]
[ '0,2,3', 4, 4, '0,2,3' ]
[ '0,2,4', 5, 5, '0,2,4' ]
[ '0,2,5', 6, 6, '0,2,5' ]
[ '0,3,4', 7, 7, '0,3,4' ]
[ '0,3,5', 8, 8, '0,3,5' ]
[ '0,4,5', 9, 9, '0,4,5' ]
[ '1,2,3', 10, 10, '1,2,3' ]
[ '1,2,4', 11, 11, '1,2,4' ]
[ '1,2,5', 12, 12, '1,2,5' ]
[ '1,3,4', 13, 13, '1,3,4' ]
[ '1,3,5', 14, 14, '1,3,5' ]
[ '1,4,5', 15, 15, '1,4,5' ]
[ '2,3,4', 16, 16, '2,3,4' ]
[ '2,3,5', 17, 17, '2,3,5' ]
[ '2,4,5', 18, 18, '2,4,5' ]
[ '3,4,5', 19, 19, '3,4,5' ]
backwards
o.rewind(-1)
3,4,5
2,4,5
2,3,5
2,3,4
1,4,5
1,3,5
1,3,4
1,2,5
1,2,4
1,2,3
0,4,5
0,3,5
0,3,4
0,2,5
0,2,4
0,2,3
0,1,5
0,1,4
0,1,3
0,1,2
o.order("lex,reflected")
2,1,0
3,1,0
4,1,0
5,1,0
3,2,0
4,2,0
5,2,0
4,3,0
5,3,0
5,4,0
3,2,1
4,2,1
5,2,1
4,3,1
5,3,1
5,4,1
4,3,2
5,3,2
5,4,2
5,4,3
o.order("lex,reversed")
3,4,5
2,4,5
2,3,5
2,3,4
1,4,5
1,3,5
1,3,4
1,2,5
1,2,4
1,2,3
0,4,5
0,3,5
0,3,4
0,2,5
0,2,4
0,2,3
0,1,5
0,1,4
0,1,3
0,1,2
o.order("colex")
0,1,2
0,1,3
0,2,3
1,2,3
0,1,4
0,2,4
1,2,4
0,3,4
1,3,4
2,3,4
0,1,5
0,2,5
1,2,5
0,3,5
1,3,5
2,3,5
0,4,5
1,4,5
2,4,5
3,4,5
o.order("colex,reflected")
2,1,0
3,1,0
3,2,0
3,2,1
4,1,0
4,2,0
4,2,1
4,3,0
4,3,1
4,3,2
5,1,0
5,2,0
5,2,1
5,3,0
5,3,1
5,3,2
5,4,0
5,4,1
5,4,2
5,4,3
o.order("colex,reversed")
3,4,5
2,4,5
1,4,5
0,4,5
2,3,5
1,3,5
0,3,5
1,2,5
0,2,5
0,1,5
2,3,4
1,3,4
0,3,4
1,2,4
0,2,4
0,1,4
1,2,3
0,2,3
0,1,3
0,1,2
o.order("random")
2,4,5
1,2,5
0,1,3
0,1,2
0,2,5
2,3,5
0,4,5
0,2,4
0,1,4
1,3,4
1,2,4
0,2,3
0,1,5
2,3,4
0,3,5
1,4,5
3,4,5
1,3,5
0,3,4
1,2,3
o.random()
1,3,5
o.order("colex").range(-5, -1)
2,3,5
0,4,5
1,4,5
2,4,5
3,4,5
o.dispose()
