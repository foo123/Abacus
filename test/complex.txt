Abacus.Complex (VERSION = 1.0.0)
---
o=Abacus.Complex()
o.toString()
0
o.toTex()
0
o.toDec()
0

o=Abacus.Complex.rnd("0", "1+i")
o.toString()
1/2+(221/256)*i
o.toDec()
0.5+0.86328125i
o.rad(2).toString()
4329443362913/5003173903488+(1438256679137/2883370983552)*i

Abacus.Complex(1).rad(2)
1
Abacus.Complex(-1).rad(2)
i
Abacus.Complex(4).rad(2)
2
Abacus.Complex(9).rad(2)
3
Abacus.Complex(27).rad(3)
3

Abacus.Complex.fromString("+i")
i
Abacus.Complex.fromString("-i")
-i
Abacus.Complex.fromString("(2/3)i")
(2/3)*i
Abacus.Complex.fromString("1+i")
1+i
Abacus.Complex.fromString("1")
1
Abacus.Complex.fromString("1+0i")
1
Abacus.Complex.fromString("0+1i")
i
Abacus.Complex.fromString("-3/2+(1/2)*i")
-3/2+(1/2)*i
Abacus.Complex.fromString("-0.2+(1/2)*i")
-1/5+(1/2)*i
Abacus.Complex.fromString("-0.2[8]+(1/2)*i")
-13/45+(1/2)*i
Abacus.Complex.fromString("-0.[8]+(1/2)*i")
-8/9+(1/2)*i
Abacus.Complex.fromString("-\frac{3}{2}+\frac{1}{2}i")
-3/2+(1/2)*i
o=Abacus.Complex(Abacus.Arithmetic.I)
o.toString()
1
o.toTex()
1
o.toDec()
1
o.neg().toString()
-1
o.conj().toString()
1
o.inv().toString()
1
o.rev().toString()
i
o.rev().toTex()
i
o.rev().neg().toString()
-i
o.rev().neg().toTex()
-i
o.rev().mul(2).toString()
2*i
o.rev().mul(2).toTex()
2i
o.rev().mul(2).neg().toString()
-2*i
o.rev().mul(2).neg().toTex()
-2i
o.pow(2).toString()
1

o=Abacus.Complex(Abacus.Rational.fromString("5/9"), Abacus.Rational.fromDec("0.[3]"))
o.toString()
5/9+(1/3)*i
o.toTex()
\frac{5}{9}+\frac{1}{3}i
o.toDec()
0.[5]+0.[3]i
o.inv().toString()
45/34-(27/34)*i
o.inv().toTex()
\frac{45}{34}-\frac{27}{34}i
o.neg().toString()
-5/9-(1/3)*i
o.neg().toTex()
-\frac{5}{9}-\frac{1}{3}i
o.conj().toString()
5/9-(1/3)*i
o.conj().toTex()
\frac{5}{9}-\frac{1}{3}i
o.rev().toString()
1/3+(5/9)*i
o.rev().toTex()
\frac{1}{3}+\frac{5}{9}i
o.add(o.rev()).toString()
8/9+(8/9)*i
o.add(o.rev()).toTex()
\frac{8}{9}+\frac{8}{9}i
o.mul(o.rev()).toString()
(34/81)*i
o.mul(o.rev()).toTex()
\frac{34}{81}i
o.div(o.rev()).toString()
15/17-(8/17)*i
o.div(o.rev()).toTex()
\frac{15}{17}-\frac{8}{17}i
o.div(o).toString()
1
o.div(o).toTex()
1
o.pow(2).toString()
16/81+(10/27)*i
o.pow(2).toTex()
\frac{16}{81}+\frac{10}{27}i

(X)GCD, LCM of Complex
Abacus.Complex.xgcd(Abacus.Complex.One(), Abacus.Complex(3))
(1)(1) + (3)(0) = 1 1 true
Abacus.Complex.xgcd(Abacus.Complex(6), Abacus.Complex(4))
(6)(-1) + (4)(2) = 2 2 true
Abacus.Complex.xgcd(Abacus.Complex(11, 7), Abacus.Complex(18, -1))
(11+7*i)(-11+13*i) + (18-i)(12-3*i) = 1 1 true
1
Abacus.Complex.xgcd(Abacus.Complex(135, -14), Abacus.Complex(155, 34))
(135-14*i)(-1+7*i) + (155+34*i)(-1-6*i) = 12-5*i 12-5*i true
12-5*i
Abacus.Complex.xgcd(Abacus.Complex(Abacus.Rational(3,7)), Abacus.Complex(Abacus.Rational(12,22)))
(3/7)(-5) + (6/11)(4) = 3/77 3/77 true
3/77
Abacus.Complex.xgcd(Abacus.Complex(Abacus.Rational(13,6)), Abacus.Complex(Abacus.Rational(3,4)))
(13/6)(-1) + (3/4)(3) = 1/12 1/12 true
1/12
