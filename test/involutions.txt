Abacus.Permutations (VERSION = 1.0.0)
---
o = Abacus.Permutation(2,{type:"involution"})
o.total()
2
default order is "lex", lexicographic-order
o.rewind()
[ 0, 1 ]
[ 1, 0 ]
o.random()
[ 0, 1 ]
o = Abacus.Permutation(3,{type:"involution"})
o.total()
4
default order is "lex", lexicographic-order
o.rewind()
[ 0, 1, 2 ]
[ 0, 2, 1 ]
[ 2, 1, 0 ]
[ 1, 0, 2 ]
o.random()
[ 0, 2, 1 ]
o = Abacus.Permutation(4,{type:"involution"})
o.total()
10
default order is "lex", lexicographic-order
o.rewind()
[ 0, 1, 2, 3 ]
[ 0, 1, 3, 2 ]
[ 0, 3, 2, 1 ]
[ 3, 1, 2, 0 ]
[ 0, 2, 1, 3 ]
[ 3, 2, 1, 0 ]
[ 2, 1, 0, 3 ]
[ 2, 3, 0, 1 ]
[ 1, 0, 2, 3 ]
[ 1, 0, 3, 2 ]
o.random()
[ 0, 3, 2, 1 ]
o = Abacus.Permutation(5).filterBy(Abacus.Permutation.isInvolution)
o.total() /* with filtering applied .total() and some other functions still return original data not the filtered ones */
120
default order is "lex", lexicographic-order
o.rewind()
[ 0, 1, 2, 3, 4 ]
[ 0, 1, 2, 4, 3 ]
[ 0, 1, 3, 2, 4 ]
[ 0, 1, 4, 3, 2 ]
[ 0, 2, 1, 3, 4 ]
[ 0, 2, 1, 4, 3 ]
[ 0, 3, 2, 1, 4 ]
[ 0, 3, 4, 1, 2 ]
[ 0, 4, 2, 3, 1 ]
[ 0, 4, 3, 2, 1 ]
[ 1, 0, 2, 3, 4 ]
[ 1, 0, 2, 4, 3 ]
[ 1, 0, 3, 2, 4 ]
[ 1, 0, 4, 3, 2 ]
[ 2, 1, 0, 3, 4 ]
[ 2, 1, 0, 4, 3 ]
[ 2, 3, 0, 1, 4 ]
[ 2, 4, 0, 3, 1 ]
[ 3, 1, 2, 0, 4 ]
[ 3, 1, 4, 0, 2 ]
[ 3, 2, 1, 0, 4 ]
[ 3, 4, 2, 0, 1 ]
[ 4, 1, 2, 3, 0 ]
[ 4, 1, 3, 2, 0 ]
[ 4, 2, 1, 3, 0 ]
[ 4, 3, 2, 1, 0 ]
o.random()
[ 2, 4, 0, 3, 1 ]
o = Abacus.Permutation(6).filterBy(Abacus.Permutation.isInvolution)
o.total() /* with filtering applied .total() and some other functions still return original data not the filtered ones */
720
default order is "lex", lexicographic-order
o.rewind()
[ 0, 1, 2, 3, 4, 5 ]
[ 0, 1, 2, 3, 5, 4 ]
[ 0, 1, 2, 4, 3, 5 ]
[ 0, 1, 2, 5, 4, 3 ]
[ 0, 1, 3, 2, 4, 5 ]
[ 0, 1, 3, 2, 5, 4 ]
[ 0, 1, 4, 3, 2, 5 ]
[ 0, 1, 4, 5, 2, 3 ]
[ 0, 1, 5, 3, 4, 2 ]
[ 0, 1, 5, 4, 3, 2 ]
[ 0, 2, 1, 3, 4, 5 ]
[ 0, 2, 1, 3, 5, 4 ]
[ 0, 2, 1, 4, 3, 5 ]
[ 0, 2, 1, 5, 4, 3 ]
[ 0, 3, 2, 1, 4, 5 ]
[ 0, 3, 2, 1, 5, 4 ]
[ 0, 3, 4, 1, 2, 5 ]
[ 0, 3, 5, 1, 4, 2 ]
[ 0, 4, 2, 3, 1, 5 ]
[ 0, 4, 2, 5, 1, 3 ]
[ 0, 4, 3, 2, 1, 5 ]
[ 0, 4, 5, 3, 1, 2 ]
[ 0, 5, 2, 3, 4, 1 ]
[ 0, 5, 2, 4, 3, 1 ]
[ 0, 5, 3, 2, 4, 1 ]
[ 0, 5, 4, 3, 2, 1 ]
[ 1, 0, 2, 3, 4, 5 ]
[ 1, 0, 2, 3, 5, 4 ]
[ 1, 0, 2, 4, 3, 5 ]
[ 1, 0, 2, 5, 4, 3 ]
[ 1, 0, 3, 2, 4, 5 ]
[ 1, 0, 3, 2, 5, 4 ]
[ 1, 0, 4, 3, 2, 5 ]
[ 1, 0, 4, 5, 2, 3 ]
[ 1, 0, 5, 3, 4, 2 ]
[ 1, 0, 5, 4, 3, 2 ]
[ 2, 1, 0, 3, 4, 5 ]
[ 2, 1, 0, 3, 5, 4 ]
[ 2, 1, 0, 4, 3, 5 ]
[ 2, 1, 0, 5, 4, 3 ]
[ 2, 3, 0, 1, 4, 5 ]
[ 2, 3, 0, 1, 5, 4 ]
[ 2, 4, 0, 3, 1, 5 ]
[ 2, 4, 0, 5, 1, 3 ]
[ 2, 5, 0, 3, 4, 1 ]
[ 2, 5, 0, 4, 3, 1 ]
[ 3, 1, 2, 0, 4, 5 ]
[ 3, 1, 2, 0, 5, 4 ]
[ 3, 1, 4, 0, 2, 5 ]
[ 3, 1, 5, 0, 4, 2 ]
[ 3, 2, 1, 0, 4, 5 ]
[ 3, 2, 1, 0, 5, 4 ]
[ 3, 4, 2, 0, 1, 5 ]
[ 3, 4, 5, 0, 1, 2 ]
[ 3, 5, 2, 0, 4, 1 ]
[ 3, 5, 4, 0, 2, 1 ]
[ 4, 1, 2, 3, 0, 5 ]
[ 4, 1, 2, 5, 0, 3 ]
[ 4, 1, 3, 2, 0, 5 ]
[ 4, 1, 5, 3, 0, 2 ]
[ 4, 2, 1, 3, 0, 5 ]
[ 4, 2, 1, 5, 0, 3 ]
[ 4, 3, 2, 1, 0, 5 ]
[ 4, 3, 5, 1, 0, 2 ]
[ 4, 5, 2, 3, 0, 1 ]
[ 4, 5, 3, 2, 0, 1 ]
[ 5, 1, 2, 3, 4, 0 ]
[ 5, 1, 2, 4, 3, 0 ]
[ 5, 1, 3, 2, 4, 0 ]
[ 5, 1, 4, 3, 2, 0 ]
[ 5, 2, 1, 3, 4, 0 ]
[ 5, 2, 1, 4, 3, 0 ]
[ 5, 3, 2, 1, 4, 0 ]
[ 5, 3, 4, 1, 2, 0 ]
[ 5, 4, 2, 3, 1, 0 ]
[ 5, 4, 3, 2, 1, 0 ]
o.random()
[ 4, 1, 2, 3, 0, 5 ]
