Abacus.Matrices (VERSION = 1.0.0)
---
Matrices and Matrix operations
ring = Abacus.Ring.Z() (\mathbb{Z}) /* ring of integers */
---
o=Abacus.Matrix(ring, 3)
o.toString()
|0 0 0|
|0 0 0|
|0 0 0|
o.toTex()
\begin{bmatrix}0 & 0 & 0 \\ 0 & 0 & 0 \\ 0 & 0 & 0\end{bmatrix}
o.dispose()
---
o=Abacus.Matrix.I(ring, 3)
o.toString()
|1 0 0|
|0 1 0|
|0 0 1|
o.toTex()
\begin{bmatrix}1 & 0 & 0 \\ 0 & 1 & 0 \\ 0 & 0 & 1\end{bmatrix}
o.slice(0, 0, 1, 1)
|1 0|
|0 1|
o.add(1)
|2 1 1|
|1 2 1|
|1 1 2|
o.mul(2)
|2 0 0|
|0 2 0|
|0 0 2|
o.add(Abacus.Matrix.I(ring, 3))
|2 0 0|
|0 2 0|
|0 0 2|
o.mul(Abacus.Matrix.I(ring, 3))
|1 0 0|
|0 1 0|
|0 0 1|
o.dispose()
---
o=Abacus.Matrix(ring, [[1,2],[3,4]]).prod(Abacus.Matrix(ring, [[1,1],[2,2]]))
|1 1 2 2|
|2 2 4 4|
|3 3 4 4|
|6 6 8 8|
o.toTex()
\begin{bmatrix}1 & 1 & 2 & 2 \\ 2 & 2 & 4 & 4 \\ 3 & 3 & 4 & 4 \\ 6 & 6 & 8 & 8\end{bmatrix}
---
o=Abacus.Matrix(ring, [91, 21]).concat(Abacus.Matrix.I(ring, 2))
o.toString()
|91 1 0|
|21 0 1|
o.ref(false, [2, 1])
|7  1 -4|
|0 -3 13|
o.ref(false, [2, 1]).slice(0, 1)
| 1 -4|
|-3 13|
o.ref(false, [2, 1]).slice(0, 1).mul(Abacus.Matrix(ring, [91, 21]))
|7|
|0|
o.ref(false, [2, 1]).slice(0, 1).t().mul(Abacus.Matrix(ring, [7, 0]))
|  7|
|-28|
---
o=Abacus.Matrix(ring, [[5, 6], [6, -11], [8, 7]]).concat(Abacus.Matrix.I(ring, 3))
o.toString()
|5   6 1 0 0|
|6 -11 0 1 0|
|8   7 0 0 1|
o.ref(false, [3, 2])
|1 -17 -1  1  0|
|0  13 -2 -1  2|
|0   0 10  1 -7|
o.ref(false, [3, 2]).slice(0, 2)
|-1  1  0|
|-2 -1  2|
|10  1 -7|
o.ref(false, [3, 2]).slice(0, 2).mul(Abacus.Matrix(ring, [[5, 6], [6, -11], [8, 7]]))
|1 -17|
|0  13|
|0   0|
o.ref(false, [3, 2]).slice(0, 2).t().mul(Abacus.Matrix(ring, [[1, -17], [0, 13], [0, 0]]))
|-1  -9|
| 1 -30|
| 0  26|
---
o=Abacus.Matrix.I(ring, 3)
o.toString()
|1 0 0|
|0 1 0|
|0 0 1|
o.evd()
U:
|1.0000 0.0000 0.0000|
|0.0000 1.0000 0.0000|
|0.0000 0.0000 1.0000|
E:
|1.0000|
|1.0000|
|1.0000|
o.svd()
U:
|-1.0000  0.0000 0.0000|
| 0.0000 -1.0000 0.0000|
| 0.0000  0.0000 1.0000|
S:
|1.0000|
|1.0000|
|1.0000|
V:
|-1.0000  0.0000 0.0000|
| 0.0000 -1.0000 0.0000|
| 0.0000  0.0000 1.0000|
---
o=Abacus.Matrix(ring, [[2,0,0],[0,3,0],[0,0,1]])
o.toString()
|2 0 0|
|0 3 0|
|0 0 1|
o.evd()
U:
|1.0000 0.0000 0.0000|
|0.0000 1.0000 0.0000|
|0.0000 0.0000 1.0000|
E:
|2.0000|
|3.0000|
|1.0000|
o.svd()
U:
| 0.0000 -1.0000 0.0000|
|-1.0000  0.0000 0.0000|
| 0.0000  0.0000 1.0000|
S:
|3.0000|
|2.0000|
|1.0000|
V:
| 0.0000 -1.0000 0.0000|
|-1.0000  0.0000 0.0000|
| 0.0000  0.0000 1.0000|
---
o=Abacus.Matrix(ring, [[3,2,2], [2,3,-2]])
o.toString()
|3 2  2|
|2 3 -2|
o.svd()
U:
| 217099444014074720903160847957980871902117423464526674252144782350556368428952642521281534515611299/307024974703804476013961192954177091191305550276956730802486656753838113811864225059915965234673941 217099439199301973297357733079176571072803555027999693935873695318720114511139185662381813638654675/307024974703804476013961192954177091191305550276956730802486656753838113811864225059915965234673941|
|-217099439199301973297357733079176571072803555027999693935873695318720114511139185662381813638654675/307024974703804476013961192954177091191305550276956730802486656753838113811864225059915965234673941 217099444014074720903160847957980871902117423464526674252144782350556368428952642521281534515611299/307024974703804476013961192954177091191305550276956730802486656753838113811864225059915965234673941|
S:
|                                                                                                                                                                                                                       97606397394253916792921863942018283510983747109201465742669101329845891719149506003739442259818338120223027/19521279442040854310774813366200486200219787402125828644417362351461969921158438434020405316761056893076637|
|20358567182246850064021637894607490657356236454544940064307105047162929102777603455424037511275833953669027966117316059759966022170530584260424727046589278740909870586730611833373254425367752686948254085401209843382/6786189025203817732290451024844863247275537514960206893445901164581410115923859983944585502323637866959368674580996421445937864583939313883794414697313867955225928649274573147234065583634719935538055496659723842985|
V:
|                                   69018145004411191853636213397777982651367988340723209053865445961458120518345717502489013143587438881348559/97606397394253916792921863942018283510983747109201465742669101329845891719149506003739442259818338120223027                                                    69018145060175912194751453489706760257361524312300612108154371066903378073705933047515891607607426621204143/97606397394253916792921863942018283510983747109201465742669101329845891719149506003739442259818338120223027                                                              470985650062726066819551808982283790384336046429087992864125900634237038858920175454925831875371768/97606397394253916792921863942018283510983747109201465742669101329845891719149506003739442259818338120223027|
|-1656229693787274901937130617428525354896159952146537769236606727242801527237732941596159503661211838352687323076600077422263/7026787656332983965040389556906606660220834542812337503241525273062700761499162452998155245292808972834824185084686977919363 375054654313393263107094908029895195827120783666809673207757681399098318170393550395551746473832481090454040392115174239176840430649/1591222072680050383584686324694572233355702471033387932157608669589157056050636419265329568719291317250117710487105613557205872405365 -4500655659805382518297096920223155867320857144222842867621081318164021937180757770094127874731952926794249524794005438229106538875428/4773666218040151150754058974083716700067107413100163796472826008767471168151909257795988706157873951750353131461316840671617617216095|
---
o=Abacus.Matrix(ring, [91, 21])
o.toString()
|91|
|21|
o.snf()
Left:
|13 4|
| 3 1|
Diagonal:
|7|
|0|
Right:
|1|
Reconstructed:
|91|
|21|
o.lu()
P:
|1 0|
|0 1|
L:
|91 0|
|21 1|
D:
|91  0|
| 0 91|
U:
|91|
| 0|
o.qr()
Q:
|91|
|21|
D:
|1|
R:
|1|
---
o=Abacus.Matrix(ring, [[5, 6], [6, -11], [8, 7]])
o.toString()
|5   6|
|6 -11|
|8   7|
o.snf()
Left:
| 96  -7 2|
| 97  -7 2|
|151 -11 3|
Diagonal:
|1  0|
|0 13|
|0  0|
Right:
|1 -17|
|1 -18|
Reconstructed:
|5   6|
|6 -11|
|8   7|
o.lu()
P:
|1 0 0|
|0 1 0|
|0 0 1|
L:
|5   0 0|
|6 -91 0|
|8 -13 1|
D:
|5    0   0|
|0 -455   0|
|0    0 -91|
U:
|5   6|
|0 -91|
|0   0|
o.qr()
Q:
|5   650|
|6 -1495|
|8   715|
D:
|125   0|
|  0 125|
R:
|125 20|
|  0  1|
---
o=Abacus.Matrix(ring, [[0, -2, 1], [1, 3, 1], [0, 0, 1], [1, 1, 5]])
o.toString()
|0 -2 1|
|1  3 1|
|0  0 1|
|1  1 5|
o.lu()
P:
|0 1 0 0|
|1 0 0 0|
|0 0 1 0|
|0 0 0 1|
L:
|1  0  0 0|
|0 -2  0 0|
|0  0 -2 0|
|1 -2 -6 1|
D:
|1  0 0  0|
|0 -2 0  0|
|0  0 4  0|
|0  0 0 -2|
U:
|1  3  1|
|0 -2  1|
|0  0 -2|
|0  0  0|
o.qr()
Q:
|0 -4 -12|
|1  2 -12|
|0  0  12|
|1 -2  12|
D:
|2  0  0|
|0 24  0|
|0  0 12|
R:
|2  4   6|
|0 12 -12|
|0  0   1|
---
o=Abacus.Matrix.I(ring, 3)
o.toString()
|1 0 0|
|0 1 0|
|0 0 1|
o.inv().toString()
|1 0 0|
|0 1 0|
|0 0 1| true
o.adj().toString()
|1 0 0|
|0 1 0|
|0 0 1| true
o.charpoly().toString()
x^3-3*x^2+3*x-1

o=Abacus.Matrix(ring, [[4,7],[2,6]])
o.toString()
|4 7|
|2 6|
o.inv().toString()
| 3/5 -7/10|
|-1/5   2/5| true
o.adj().toString()
| 6 -7|
|-2  4| true
o.charpoly().toString()
x^2-10*x+10

o=Abacus.Matrix(ring, [[-3,2,-5],[-1,0,-2],[3,-4,1]])
o.toString()
|-3  2 -5|
|-1  0 -2|
| 3 -4  1|
o.adj().toString()
|-8 18 -4|
|-5 12 -1|
| 4 -6  2| true
o.charpoly().toString()
x^3+2*x^2+6*x+6
---
o=Abacus.Matrix(ring, 3, 3)
o.toString()
|0 0 0|
|0 0 0|
|0 0 0|
o.rowspace()
o.colspace()
o.nullspace()
Vector 0(true): 
|1|
|0|
|0|
Vector 1(true): 
|0|
|1|
|0|
Vector 2(true): 
|0|
|0|
|1|
<0,1> = 0
<0,2> = 0
<1,2> = 0
o.nullspace(true)
Vector 0(true): 
|1 0 0|
Vector 1(true): 
|0 1 0|
Vector 2(true): 
|0 0 1|
<0,1> = 0
<0,2> = 0
<1,2> = 0
---
o=Abacus.Matrix.I(ring, 3)
o.toString()
|1 0 0|
|0 1 0|
|0 0 1|
o.rowspace()
Vector 0:
|1 0 0|
Vector 1:
|0 1 0|
Vector 2:
|0 0 1|
<0,1> = 0
<0,2> = 0
<1,2> = 0
o.colspace()
Vector 0:
|1|
|0|
|0|
Vector 1:
|0|
|1|
|0|
Vector 2:
|0|
|0|
|1|
<0,1> = 0
<0,2> = 0
<1,2> = 0
o.nullspace()
o.nullspace(true)
---
o=Abacus.Matrix(ring, [[ 1,  3, 0],[-2, -6, 0],[ 3,  9, 6]])
o.toString()
| 1  3 0|
|-2 -6 0|
| 3  9 6|
o.rowspace()
Vector 0:
|1 3 0|
Vector 1:
|3 9 6|
<0,1> = 30
o.colspace()
Vector 0:
| 1|
|-2|
| 3|
Vector 1:
|0|
|0|
|6|
<0,1> = 18
o.nullspace()
Vector 0(true): 
|-3|
| 1|
| 0|
o.nullspace(true)
Vector 0(true): 
|2 1 0|
---
o=Abacus.Matrix(ring, [[5, 10, 7], [3, 6, 1], [7, 14, 0]])
o.toString()
|5 10 7|
|3  6 1|
|7 14 0|
o.rowspace()
Vector 0:
|7 14 0|
Vector 1:
|3 6 1|
<0,1> = 105
o.colspace()
Vector 0:
|5|
|3|
|7|
Vector 1:
|7|
|1|
|0|
<0,1> = 38
o.nullspace()
Vector 0(true): 
|-2|
| 1|
| 0|
o.nullspace(true)
Vector 0(true): 
|7 -49 16|
---
o=Abacus.Matrix(ring, [[5, 3, 7], [10, 6, 14], [8, 3, 1]])
o.toString()
| 5 3  7|
|10 6 14|
| 8 3  1|
o.rowspace()
Vector 0:
|8 3 1|
Vector 1:
|5 3 7|
<0,1> = 56
o.colspace()
Vector 0:
| 5|
|10|
| 8|
Vector 1:
|3|
|6|
|3|
<0,1> = 99
o.nullspace()
Vector 0(true): 
|  6|
|-17|
|  3|
o.nullspace(true)
Vector 0(true): 
|-2 1 0|
---
o=Abacus.Matrix(ring, [[1, 1, 1], [2, 2, 2], [3, 3, 3]])
o.toString()
|1 1 1|
|2 2 2|
|3 3 3|
o.rowspace()
Vector 0:
|1 1 1|
o.colspace()
Vector 0:
|1|
|2|
|3|
o.nullspace()
Vector 0(true): 
|-1|
| 1|
| 0|
Vector 1(true): 
|-1|
| 0|
| 1|
<0,1> = 1
o.nullspace(true)
Vector 0(true): 
|-2 1 0|
Vector 1(true): 
|-3 0 1|
<0,1> = 6
---
ring = Abacus.Ring.Q("x") (\mathbb{Q}[x]) /* ring of polynomials */
---
o=Abacus.Matrix.I(ring, 3)
o.toString()
|1 0 0|
|0 1 0|
|0 0 1|
o.inv().toString()
|1 0 0|
|0 1 0|
|0 0 1| true
o.charpoly("y").toString()
y^3-3*y^2+3*y-1

o=Abacus.Matrix(ring, [[ring.fromString("x-1"),ring.fromString("x^2-1")],[ring.fromString("x^2-1"),ring.fromString("x-1")]])
o.toString()
|  x-1 x^2-1|
|x^2-1   x-1|
o.rref().toString()
|-1            0|
| 0 -x^3-x^2+2*x|
o.inv().toString()
|   -1/(x^3+x^2-2*x) (x+1)/(x^3+x^2-2*x)|
|(x+1)/(x^3+x^2-2*x)    -1/(x^3+x^2-2*x)| true
o.charpoly("y").toString()
y^2+(-2*x+2)*y+(-x^4+3*x^2-2*x)
---
