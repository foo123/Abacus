Abacus.CombinationRepeats (VERSION = 2.0.0)
---
o = Abacus.Combination(5,3,{type:"variation+repeated"})
o.total()
Integer { value: 125n }
o.next()
0,0,0
o.hasNext()
true
o.next()
0,0,1
default order is "lex", lexicographic-order
o.rewind()
[ '0,0,0', 0, Integer { value: 0n }, '0,0,0' ]
[ '0,0,1', 1, Integer { value: 1n }, '0,0,1' ]
[ '0,0,2', 2, Integer { value: 2n }, '0,0,2' ]
[ '0,0,3', 3, Integer { value: 3n }, '0,0,3' ]
[ '0,0,4', 4, Integer { value: 4n }, '0,0,4' ]
[ '0,1,0', 5, Integer { value: 5n }, '0,1,0' ]
[ '0,1,1', 6, Integer { value: 6n }, '0,1,1' ]
[ '0,1,2', 7, Integer { value: 7n }, '0,1,2' ]
[ '0,1,3', 8, Integer { value: 8n }, '0,1,3' ]
[ '0,1,4', 9, Integer { value: 9n }, '0,1,4' ]
[ '0,2,0', 10, Integer { value: 10n }, '0,2,0' ]
[ '0,2,1', 11, Integer { value: 11n }, '0,2,1' ]
[ '0,2,2', 12, Integer { value: 12n }, '0,2,2' ]
[ '0,2,3', 13, Integer { value: 13n }, '0,2,3' ]
[ '0,2,4', 14, Integer { value: 14n }, '0,2,4' ]
[ '0,3,0', 15, Integer { value: 15n }, '0,3,0' ]
[ '0,3,1', 16, Integer { value: 16n }, '0,3,1' ]
[ '0,3,2', 17, Integer { value: 17n }, '0,3,2' ]
[ '0,3,3', 18, Integer { value: 18n }, '0,3,3' ]
[ '0,3,4', 19, Integer { value: 19n }, '0,3,4' ]
[ '0,4,0', 20, Integer { value: 20n }, '0,4,0' ]
[ '0,4,1', 21, Integer { value: 21n }, '0,4,1' ]
[ '0,4,2', 22, Integer { value: 22n }, '0,4,2' ]
[ '0,4,3', 23, Integer { value: 23n }, '0,4,3' ]
[ '0,4,4', 24, Integer { value: 24n }, '0,4,4' ]
[ '1,0,0', 25, Integer { value: 25n }, '1,0,0' ]
[ '1,0,1', 26, Integer { value: 26n }, '1,0,1' ]
[ '1,0,2', 27, Integer { value: 27n }, '1,0,2' ]
[ '1,0,3', 28, Integer { value: 28n }, '1,0,3' ]
[ '1,0,4', 29, Integer { value: 29n }, '1,0,4' ]
[ '1,1,0', 30, Integer { value: 30n }, '1,1,0' ]
[ '1,1,1', 31, Integer { value: 31n }, '1,1,1' ]
[ '1,1,2', 32, Integer { value: 32n }, '1,1,2' ]
[ '1,1,3', 33, Integer { value: 33n }, '1,1,3' ]
[ '1,1,4', 34, Integer { value: 34n }, '1,1,4' ]
[ '1,2,0', 35, Integer { value: 35n }, '1,2,0' ]
[ '1,2,1', 36, Integer { value: 36n }, '1,2,1' ]
[ '1,2,2', 37, Integer { value: 37n }, '1,2,2' ]
[ '1,2,3', 38, Integer { value: 38n }, '1,2,3' ]
[ '1,2,4', 39, Integer { value: 39n }, '1,2,4' ]
[ '1,3,0', 40, Integer { value: 40n }, '1,3,0' ]
[ '1,3,1', 41, Integer { value: 41n }, '1,3,1' ]
[ '1,3,2', 42, Integer { value: 42n }, '1,3,2' ]
[ '1,3,3', 43, Integer { value: 43n }, '1,3,3' ]
[ '1,3,4', 44, Integer { value: 44n }, '1,3,4' ]
[ '1,4,0', 45, Integer { value: 45n }, '1,4,0' ]
[ '1,4,1', 46, Integer { value: 46n }, '1,4,1' ]
[ '1,4,2', 47, Integer { value: 47n }, '1,4,2' ]
[ '1,4,3', 48, Integer { value: 48n }, '1,4,3' ]
[ '1,4,4', 49, Integer { value: 49n }, '1,4,4' ]
[ '2,0,0', 50, Integer { value: 50n }, '2,0,0' ]
[ '2,0,1', 51, Integer { value: 51n }, '2,0,1' ]
[ '2,0,2', 52, Integer { value: 52n }, '2,0,2' ]
[ '2,0,3', 53, Integer { value: 53n }, '2,0,3' ]
[ '2,0,4', 54, Integer { value: 54n }, '2,0,4' ]
[ '2,1,0', 55, Integer { value: 55n }, '2,1,0' ]
[ '2,1,1', 56, Integer { value: 56n }, '2,1,1' ]
[ '2,1,2', 57, Integer { value: 57n }, '2,1,2' ]
[ '2,1,3', 58, Integer { value: 58n }, '2,1,3' ]
[ '2,1,4', 59, Integer { value: 59n }, '2,1,4' ]
[ '2,2,0', 60, Integer { value: 60n }, '2,2,0' ]
[ '2,2,1', 61, Integer { value: 61n }, '2,2,1' ]
[ '2,2,2', 62, Integer { value: 62n }, '2,2,2' ]
[ '2,2,3', 63, Integer { value: 63n }, '2,2,3' ]
[ '2,2,4', 64, Integer { value: 64n }, '2,2,4' ]
[ '2,3,0', 65, Integer { value: 65n }, '2,3,0' ]
[ '2,3,1', 66, Integer { value: 66n }, '2,3,1' ]
[ '2,3,2', 67, Integer { value: 67n }, '2,3,2' ]
[ '2,3,3', 68, Integer { value: 68n }, '2,3,3' ]
[ '2,3,4', 69, Integer { value: 69n }, '2,3,4' ]
[ '2,4,0', 70, Integer { value: 70n }, '2,4,0' ]
[ '2,4,1', 71, Integer { value: 71n }, '2,4,1' ]
[ '2,4,2', 72, Integer { value: 72n }, '2,4,2' ]
[ '2,4,3', 73, Integer { value: 73n }, '2,4,3' ]
[ '2,4,4', 74, Integer { value: 74n }, '2,4,4' ]
[ '3,0,0', 75, Integer { value: 75n }, '3,0,0' ]
[ '3,0,1', 76, Integer { value: 76n }, '3,0,1' ]
[ '3,0,2', 77, Integer { value: 77n }, '3,0,2' ]
[ '3,0,3', 78, Integer { value: 78n }, '3,0,3' ]
[ '3,0,4', 79, Integer { value: 79n }, '3,0,4' ]
[ '3,1,0', 80, Integer { value: 80n }, '3,1,0' ]
[ '3,1,1', 81, Integer { value: 81n }, '3,1,1' ]
[ '3,1,2', 82, Integer { value: 82n }, '3,1,2' ]
[ '3,1,3', 83, Integer { value: 83n }, '3,1,3' ]
[ '3,1,4', 84, Integer { value: 84n }, '3,1,4' ]
[ '3,2,0', 85, Integer { value: 85n }, '3,2,0' ]
[ '3,2,1', 86, Integer { value: 86n }, '3,2,1' ]
[ '3,2,2', 87, Integer { value: 87n }, '3,2,2' ]
[ '3,2,3', 88, Integer { value: 88n }, '3,2,3' ]
[ '3,2,4', 89, Integer { value: 89n }, '3,2,4' ]
[ '3,3,0', 90, Integer { value: 90n }, '3,3,0' ]
[ '3,3,1', 91, Integer { value: 91n }, '3,3,1' ]
[ '3,3,2', 92, Integer { value: 92n }, '3,3,2' ]
[ '3,3,3', 93, Integer { value: 93n }, '3,3,3' ]
[ '3,3,4', 94, Integer { value: 94n }, '3,3,4' ]
[ '3,4,0', 95, Integer { value: 95n }, '3,4,0' ]
[ '3,4,1', 96, Integer { value: 96n }, '3,4,1' ]
[ '3,4,2', 97, Integer { value: 97n }, '3,4,2' ]
[ '3,4,3', 98, Integer { value: 98n }, '3,4,3' ]
[ '3,4,4', 99, Integer { value: 99n }, '3,4,4' ]
[ '4,0,0', 100, Integer { value: 100n }, '4,0,0' ]
[ '4,0,1', 101, Integer { value: 101n }, '4,0,1' ]
[ '4,0,2', 102, Integer { value: 102n }, '4,0,2' ]
[ '4,0,3', 103, Integer { value: 103n }, '4,0,3' ]
[ '4,0,4', 104, Integer { value: 104n }, '4,0,4' ]
[ '4,1,0', 105, Integer { value: 105n }, '4,1,0' ]
[ '4,1,1', 106, Integer { value: 106n }, '4,1,1' ]
[ '4,1,2', 107, Integer { value: 107n }, '4,1,2' ]
[ '4,1,3', 108, Integer { value: 108n }, '4,1,3' ]
[ '4,1,4', 109, Integer { value: 109n }, '4,1,4' ]
[ '4,2,0', 110, Integer { value: 110n }, '4,2,0' ]
[ '4,2,1', 111, Integer { value: 111n }, '4,2,1' ]
[ '4,2,2', 112, Integer { value: 112n }, '4,2,2' ]
[ '4,2,3', 113, Integer { value: 113n }, '4,2,3' ]
[ '4,2,4', 114, Integer { value: 114n }, '4,2,4' ]
[ '4,3,0', 115, Integer { value: 115n }, '4,3,0' ]
[ '4,3,1', 116, Integer { value: 116n }, '4,3,1' ]
[ '4,3,2', 117, Integer { value: 117n }, '4,3,2' ]
[ '4,3,3', 118, Integer { value: 118n }, '4,3,3' ]
[ '4,3,4', 119, Integer { value: 119n }, '4,3,4' ]
[ '4,4,0', 120, Integer { value: 120n }, '4,4,0' ]
[ '4,4,1', 121, Integer { value: 121n }, '4,4,1' ]
[ '4,4,2', 122, Integer { value: 122n }, '4,4,2' ]
[ '4,4,3', 123, Integer { value: 123n }, '4,4,3' ]
[ '4,4,4', 124, Integer { value: 124n }, '4,4,4' ]
backwards
o.rewind(-1)
4,4,4
4,4,3
4,4,2
4,4,1
4,4,0
4,3,4
4,3,3
4,3,2
4,3,1
4,3,0
4,2,4
4,2,3
4,2,2
4,2,1
4,2,0
4,1,4
4,1,3
4,1,2
4,1,1
4,1,0
4,0,4
4,0,3
4,0,2
4,0,1
4,0,0
3,4,4
3,4,3
3,4,2
3,4,1
3,4,0
3,3,4
3,3,3
3,3,2
3,3,1
3,3,0
3,2,4
3,2,3
3,2,2
3,2,1
3,2,0
3,1,4
3,1,3
3,1,2
3,1,1
3,1,0
3,0,4
3,0,3
3,0,2
3,0,1
3,0,0
2,4,4
2,4,3
2,4,2
2,4,1
2,4,0
2,3,4
2,3,3
2,3,2
2,3,1
2,3,0
2,2,4
2,2,3
2,2,2
2,2,1
2,2,0
2,1,4
2,1,3
2,1,2
2,1,1
2,1,0
2,0,4
2,0,3
2,0,2
2,0,1
2,0,0
1,4,4
1,4,3
1,4,2
1,4,1
1,4,0
1,3,4
1,3,3
1,3,2
1,3,1
1,3,0
1,2,4
1,2,3
1,2,2
1,2,1
1,2,0
1,1,4
1,1,3
1,1,2
1,1,1
1,1,0
1,0,4
1,0,3
1,0,2
1,0,1
1,0,0
0,4,4
0,4,3
0,4,2
0,4,1
0,4,0
0,3,4
0,3,3
0,3,2
0,3,1
0,3,0
0,2,4
0,2,3
0,2,2
0,2,1
0,2,0
0,1,4
0,1,3
0,1,2
0,1,1
0,1,0
0,0,4
0,0,3
0,0,2
0,0,1
0,0,0
o.order("lex,reflected")
0,0,0
1,0,0
2,0,0
3,0,0
4,0,0
0,1,0
1,1,0
2,1,0
3,1,0
4,1,0
0,2,0
1,2,0
2,2,0
3,2,0
4,2,0
0,3,0
1,3,0
2,3,0
3,3,0
4,3,0
0,4,0
1,4,0
2,4,0
3,4,0
4,4,0
0,0,1
1,0,1
2,0,1
3,0,1
4,0,1
0,1,1
1,1,1
2,1,1
3,1,1
4,1,1
0,2,1
1,2,1
2,2,1
3,2,1
4,2,1
0,3,1
1,3,1
2,3,1
3,3,1
4,3,1
0,4,1
1,4,1
2,4,1
3,4,1
4,4,1
0,0,2
1,0,2
2,0,2
3,0,2
4,0,2
0,1,2
1,1,2
2,1,2
3,1,2
4,1,2
0,2,2
1,2,2
2,2,2
3,2,2
4,2,2
0,3,2
1,3,2
2,3,2
3,3,2
4,3,2
0,4,2
1,4,2
2,4,2
3,4,2
4,4,2
0,0,3
1,0,3
2,0,3
3,0,3
4,0,3
0,1,3
1,1,3
2,1,3
3,1,3
4,1,3
0,2,3
1,2,3
2,2,3
3,2,3
4,2,3
0,3,3
1,3,3
2,3,3
3,3,3
4,3,3
0,4,3
1,4,3
2,4,3
3,4,3
4,4,3
0,0,4
1,0,4
2,0,4
3,0,4
4,0,4
0,1,4
1,1,4
2,1,4
3,1,4
4,1,4
0,2,4
1,2,4
2,2,4
3,2,4
4,2,4
0,3,4
1,3,4
2,3,4
3,3,4
4,3,4
0,4,4
1,4,4
2,4,4
3,4,4
4,4,4
o.order("lex,reversed")
4,4,4
4,4,3
4,4,2
4,4,1
4,4,0
4,3,4
4,3,3
4,3,2
4,3,1
4,3,0
4,2,4
4,2,3
4,2,2
4,2,1
4,2,0
4,1,4
4,1,3
4,1,2
4,1,1
4,1,0
4,0,4
4,0,3
4,0,2
4,0,1
4,0,0
3,4,4
3,4,3
3,4,2
3,4,1
3,4,0
3,3,4
3,3,3
3,3,2
3,3,1
3,3,0
3,2,4
3,2,3
3,2,2
3,2,1
3,2,0
3,1,4
3,1,3
3,1,2
3,1,1
3,1,0
3,0,4
3,0,3
3,0,2
3,0,1
3,0,0
2,4,4
2,4,3
2,4,2
2,4,1
2,4,0
2,3,4
2,3,3
2,3,2
2,3,1
2,3,0
2,2,4
2,2,3
2,2,2
2,2,1
2,2,0
2,1,4
2,1,3
2,1,2
2,1,1
2,1,0
2,0,4
2,0,3
2,0,2
2,0,1
2,0,0
1,4,4
1,4,3
1,4,2
1,4,1
1,4,0
1,3,4
1,3,3
1,3,2
1,3,1
1,3,0
1,2,4
1,2,3
1,2,2
1,2,1
1,2,0
1,1,4
1,1,3
1,1,2
1,1,1
1,1,0
1,0,4
1,0,3
1,0,2
1,0,1
1,0,0
0,4,4
0,4,3
0,4,2
0,4,1
0,4,0
0,3,4
0,3,3
0,3,2
0,3,1
0,3,0
0,2,4
0,2,3
0,2,2
0,2,1
0,2,0
0,1,4
0,1,3
0,1,2
0,1,1
0,1,0
0,0,4
0,0,3
0,0,2
0,0,1
0,0,0
o.order("colex")
0,0,0
1,0,0
2,0,0
3,0,0
4,0,0
0,1,0
1,1,0
2,1,0
3,1,0
4,1,0
0,2,0
1,2,0
2,2,0
3,2,0
4,2,0
0,3,0
1,3,0
2,3,0
3,3,0
4,3,0
0,4,0
1,4,0
2,4,0
3,4,0
4,4,0
0,0,1
1,0,1
2,0,1
3,0,1
4,0,1
0,1,1
1,1,1
2,1,1
3,1,1
4,1,1
0,2,1
1,2,1
2,2,1
3,2,1
4,2,1
0,3,1
1,3,1
2,3,1
3,3,1
4,3,1
0,4,1
1,4,1
2,4,1
3,4,1
4,4,1
0,0,2
1,0,2
2,0,2
3,0,2
4,0,2
0,1,2
1,1,2
2,1,2
3,1,2
4,1,2
0,2,2
1,2,2
2,2,2
3,2,2
4,2,2
0,3,2
1,3,2
2,3,2
3,3,2
4,3,2
0,4,2
1,4,2
2,4,2
3,4,2
4,4,2
0,0,3
1,0,3
2,0,3
3,0,3
4,0,3
0,1,3
1,1,3
2,1,3
3,1,3
4,1,3
0,2,3
1,2,3
2,2,3
3,2,3
4,2,3
0,3,3
1,3,3
2,3,3
3,3,3
4,3,3
0,4,3
1,4,3
2,4,3
3,4,3
4,4,3
0,0,4
1,0,4
2,0,4
3,0,4
4,0,4
0,1,4
1,1,4
2,1,4
3,1,4
4,1,4
0,2,4
1,2,4
2,2,4
3,2,4
4,2,4
0,3,4
1,3,4
2,3,4
3,3,4
4,3,4
0,4,4
1,4,4
2,4,4
3,4,4
4,4,4
o.order("colex,reflected")
0,0,0
0,0,1
0,0,2
0,0,3
0,0,4
0,1,0
0,1,1
0,1,2
0,1,3
0,1,4
0,2,0
0,2,1
0,2,2
0,2,3
0,2,4
0,3,0
0,3,1
0,3,2
0,3,3
0,3,4
0,4,0
0,4,1
0,4,2
0,4,3
0,4,4
1,0,0
1,0,1
1,0,2
1,0,3
1,0,4
1,1,0
1,1,1
1,1,2
1,1,3
1,1,4
1,2,0
1,2,1
1,2,2
1,2,3
1,2,4
1,3,0
1,3,1
1,3,2
1,3,3
1,3,4
1,4,0
1,4,1
1,4,2
1,4,3
1,4,4
2,0,0
2,0,1
2,0,2
2,0,3
2,0,4
2,1,0
2,1,1
2,1,2
2,1,3
2,1,4
2,2,0
2,2,1
2,2,2
2,2,3
2,2,4
2,3,0
2,3,1
2,3,2
2,3,3
2,3,4
2,4,0
2,4,1
2,4,2
2,4,3
2,4,4
3,0,0
3,0,1
3,0,2
3,0,3
3,0,4
3,1,0
3,1,1
3,1,2
3,1,3
3,1,4
3,2,0
3,2,1
3,2,2
3,2,3
3,2,4
3,3,0
3,3,1
3,3,2
3,3,3
3,3,4
3,4,0
3,4,1
3,4,2
3,4,3
3,4,4
4,0,0
4,0,1
4,0,2
4,0,3
4,0,4
4,1,0
4,1,1
4,1,2
4,1,3
4,1,4
4,2,0
4,2,1
4,2,2
4,2,3
4,2,4
4,3,0
4,3,1
4,3,2
4,3,3
4,3,4
4,4,0
4,4,1
4,4,2
4,4,3
4,4,4
o.order("colex,reversed")
4,4,4
3,4,4
2,4,4
1,4,4
0,4,4
4,3,4
3,3,4
2,3,4
1,3,4
0,3,4
4,2,4
3,2,4
2,2,4
1,2,4
0,2,4
4,1,4
3,1,4
2,1,4
1,1,4
0,1,4
4,0,4
3,0,4
2,0,4
1,0,4
0,0,4
4,4,3
3,4,3
2,4,3
1,4,3
0,4,3
4,3,3
3,3,3
2,3,3
1,3,3
0,3,3
4,2,3
3,2,3
2,2,3
1,2,3
0,2,3
4,1,3
3,1,3
2,1,3
1,1,3
0,1,3
4,0,3
3,0,3
2,0,3
1,0,3
0,0,3
4,4,2
3,4,2
2,4,2
1,4,2
0,4,2
4,3,2
3,3,2
2,3,2
1,3,2
0,3,2
4,2,2
3,2,2
2,2,2
1,2,2
0,2,2
4,1,2
3,1,2
2,1,2
1,1,2
0,1,2
4,0,2
3,0,2
2,0,2
1,0,2
0,0,2
4,4,1
3,4,1
2,4,1
1,4,1
0,4,1
4,3,1
3,3,1
2,3,1
1,3,1
0,3,1
4,2,1
3,2,1
2,2,1
1,2,1
0,2,1
4,1,1
3,1,1
2,1,1
1,1,1
0,1,1
4,0,1
3,0,1
2,0,1
1,0,1
0,0,1
4,4,0
3,4,0
2,4,0
1,4,0
0,4,0
4,3,0
3,3,0
2,3,0
1,3,0
0,3,0
4,2,0
3,2,0
2,2,0
1,2,0
0,2,0
4,1,0
3,1,0
2,1,0
1,1,0
0,1,0
4,0,0
3,0,0
2,0,0
1,0,0
0,0,0
o.order("random")
2,1,3
0,2,0
2,3,3
0,3,3
4,4,0
3,3,0
1,4,2
0,4,0
3,0,0
0,2,2
0,4,4
4,4,3
1,0,2
4,4,4
3,1,3
4,1,0
0,1,0
0,4,1
1,4,4
0,0,1
0,1,4
3,2,3
4,1,1
3,4,1
2,1,1
4,1,2
2,2,2
4,1,4
1,2,3
4,1,3
1,1,4
0,0,0
0,2,1
3,0,1
0,4,2
2,1,2
3,3,1
3,4,2
4,4,1
2,0,0
2,1,0
3,3,3
1,0,3
2,1,4
4,3,1
4,3,3
2,4,4
3,4,0
3,2,2
4,3,4
0,4,3
2,2,4
4,0,2
1,2,0
1,3,3
1,3,1
3,3,2
1,2,4
2,2,3
4,4,2
4,2,0
1,0,0
3,1,0
3,0,3
3,4,3
2,2,0
1,2,1
1,2,2
2,2,1
2,3,1
2,0,1
0,3,2
0,1,3
0,0,2
0,3,0
2,3,0
4,3,2
0,2,4
0,3,1
0,2,3
4,0,3
1,1,2
1,4,3
0,1,1
0,0,4
1,3,0
4,0,0
3,1,4
1,4,1
0,3,4
4,3,0
1,0,1
0,1,2
1,3,2
2,3,2
3,3,4
2,0,2
2,3,4
4,2,1
3,0,4
3,0,2
1,3,4
2,4,0
0,0,3
1,0,4
2,0,4
2,0,3
1,1,3
2,4,3
2,4,1
1,1,0
4,2,4
1,4,0
4,0,4
4,2,3
1,1,1
2,4,2
3,1,1
4,2,2
3,1,2
3,2,0
4,0,1
3,4,4
3,2,1
3,2,4
o.random()
2,0,4
o.order("colex").range(-5, -1)
0,4,4
1,4,4
2,4,4
3,4,4
4,4,4
o.dispose()
