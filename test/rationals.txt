Abacus.Rationals (VERSION = 0.9.8)
---
o=Abacus.Rational()
o.toString()
0
o.toTex()
0
o.toDec()
0

o=Abacus.Rational.fromString("5/9")
o.toString()
5/9
o.toTex()
\frac{5}{9}
o.toDec()
0.[5]
Abacus.Rational.fromDec(o.toDec()).toString()
5/9
Abacus.Rational.fromTex(o.toTex()).toString()
5/9
Abacus.Rational(5, 9).toString()
5/9
Abacus.Rational("5", 9).toString()
5/9
o.inv().toString()
9/5
o.inv().toTex()
\frac{9}{5}
o.inv().toDec()
1.8
o.neg().toString()
-5/9
o.neg().toTex()
\frac{-5}{9}
o.neg().toDec()
-0.[5]

o=Abacus.Rational.fromDec("0.[5]")
o.toString()
5/9
o.toTex()
\frac{5}{9}
o.toDec()
0.[5]

o=Abacus.Rational.fromIntRem(3, 1, 3)
o.toString()
10/3
o.toTex()
\frac{10}{3}
o.toDec()
3.[3]
[o.integer(), o.remainder()]
[ '3', '1' ]

o=Abacus.Rational.fromDec("0.[5]").add(Abacus.Rational.fromDec("0.[3]"))
o.toString()
8/9
o.toTex()
\frac{8}{9}
o.toDec()
0.[8]

o=Abacus.Rational.fromDec("0.[5]").mul(Abacus.Rational.fromDec("0.[3]"))
o.toString()
5/27
o.toTex()
\frac{5}{27}
o.toDec()
0.[185]

o=Abacus.Rational.fromDec("0.[5]").equ(Abacus.Rational.fromString("5/9"))
true
Decimals to Fractions (with optional repeating decimals)
o=Abacus.Rational.fromDec(-3)
-3
o=Abacus.Rational.fromDec("-3.0")
-3
o=Abacus.Rational.fromDec("-3.[0]")
-3
o=Abacus.Rational.fromDec(0.9)
9/10
o=Abacus.Rational.fromDec("0.[9]")
1
o=Abacus.Rational.fromDec(0.5)
1/2
o=Abacus.Rational.fromDec("0.[5]")
5/9
o=Abacus.Rational.fromDec("0.55[5]")
5/9
o=Abacus.Rational.fromDec("0.555[55]")
5/9
o=Abacus.Rational.fromDec("0.[3]")
1/3
o=Abacus.Rational.fromDec("0.1[6]")
1/6
o=Abacus.Rational.fromDec("0.1[7]")
8/45
o=Abacus.Rational.fromDec("3.[3]")
10/3
o=Abacus.Rational.fromDec("1.0[42]")
172/165
o=Abacus.Rational.fromDec("1.04242[42]")
172/165
---
Fractions to Decimals (with optional repeating decimals)
o=Abacus.Rational.fromString("-3/1").toDec()
-3
o=Abacus.Rational.fromString("-3/-1").toDec()
3
o=Abacus.Rational.fromString("1/6").toDec()
0.1[6]
o=Abacus.Rational.fromString("5/9").toDec()
0.[5]
o=Abacus.Rational.fromString("9/10").toDec()
0.9
o=Abacus.Rational.fromString("172/165").toDec()
1.0[42]
---
