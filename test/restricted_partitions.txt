Abacus.Partitions (VERSION = 1.0.0)
---
o = Abacus.Partition(7,{"max=":4})
o.total()
3
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1 ]
[ 4, 2, 1 ]
[ 4, 3 ]
backwards
o.rewind(-1)
[ 4, 3 ]
[ 4, 2, 1 ]
[ 4, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 4 ]
[ 1, 2, 4 ]
[ 3, 4 ]
o.order("lex,reversed")
[ 4, 3 ]
[ 4, 2, 1 ]
[ 4, 1, 1, 1 ]
o.order("colex")
[ 4, 3 ]
o.order("colex,reflected")
[ 3, 4 ]
o.order("colex,reversed")
[ 4, 1, 1, 1 ]
o.random()
[ 4, 2, 1 ]
o.dispose()
o = Abacus.Partition(8,{"max=":4})
o.total()
5
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 4, 2, 2 ]
[ 4, 3, 1 ]
[ 4, 4 ]
backwards
o.rewind(-1)
[ 4, 4 ]
[ 4, 3, 1 ]
[ 4, 2, 2 ]
[ 4, 2, 1, 1 ]
[ 4, 1, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 1, 4 ]
[ 1, 1, 2, 4 ]
[ 2, 2, 4 ]
[ 1, 3, 4 ]
[ 4, 4 ]
o.order("lex,reversed")
[ 4, 4 ]
[ 4, 3, 1 ]
[ 4, 2, 2 ]
[ 4, 2, 1, 1 ]
[ 4, 1, 1, 1, 1 ]
o.random()
[ 4, 1, 1, 1, 1 ]
o.dispose()
o = Abacus.Partition(11,{"max=":5})
o.total()
10
default order is "lex", lexicographic-order
o.rewind()
[ 5, 1, 1, 1, 1, 1, 1 ]
[ 5, 2, 1, 1, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 2, 2, 2 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 3, 2, 1 ]
[ 5, 3, 3 ]
[ 5, 4, 1, 1 ]
[ 5, 4, 2 ]
[ 5, 5, 1 ]
backwards
o.rewind(-1)
[ 5, 5, 1 ]
[ 5, 4, 2 ]
[ 5, 4, 1, 1 ]
[ 5, 3, 3 ]
[ 5, 3, 2, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 2, 2, 2 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 2, 1, 1, 1, 1 ]
[ 5, 1, 1, 1, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 1, 1, 1, 5 ]
[ 1, 1, 1, 1, 2, 5 ]
[ 1, 1, 2, 2, 5 ]
[ 2, 2, 2, 5 ]
[ 1, 1, 1, 3, 5 ]
[ 1, 2, 3, 5 ]
[ 3, 3, 5 ]
[ 1, 1, 4, 5 ]
[ 2, 4, 5 ]
[ 1, 5, 5 ]
o.order("lex,reversed")
[ 5, 5, 1 ]
[ 5, 4, 2 ]
[ 5, 4, 1, 1 ]
[ 5, 3, 3 ]
[ 5, 3, 2, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 2, 2, 2 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 2, 1, 1, 1, 1 ]
[ 5, 1, 1, 1, 1, 1, 1 ]
o.random()
[ 5, 2, 1, 1, 1, 1 ]
o.dispose()
o = Abacus.Partition(12,{"max=":4})
o.total()
15
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 1, 1 ]
[ 4, 2, 2, 2, 2 ]
[ 4, 3, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 1, 1, 1 ]
[ 4, 3, 2, 2, 1 ]
[ 4, 3, 3, 1, 1 ]
[ 4, 3, 3, 2 ]
[ 4, 4, 1, 1, 1, 1 ]
[ 4, 4, 2, 1, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 4 ]
backwards
o.rewind(-1)
[ 4, 4, 4 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 2, 1, 1 ]
[ 4, 4, 1, 1, 1, 1 ]
[ 4, 3, 3, 2 ]
[ 4, 3, 3, 1, 1 ]
[ 4, 3, 2, 2, 1 ]
[ 4, 3, 2, 1, 1, 1 ]
[ 4, 3, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 2 ]
[ 4, 2, 2, 2, 1, 1 ]
[ 4, 2, 2, 1, 1, 1, 1 ]
[ 4, 2, 1, 1, 1, 1, 1, 1 ]
[ 4, 1, 1, 1, 1, 1, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 1, 1, 1, 1, 1, 4 ]
[ 1, 1, 1, 1, 1, 1, 2, 4 ]
[ 1, 1, 1, 1, 2, 2, 4 ]
[ 1, 1, 2, 2, 2, 4 ]
[ 2, 2, 2, 2, 4 ]
[ 1, 1, 1, 1, 1, 3, 4 ]
[ 1, 1, 1, 2, 3, 4 ]
[ 1, 2, 2, 3, 4 ]
[ 1, 1, 3, 3, 4 ]
[ 2, 3, 3, 4 ]
[ 1, 1, 1, 1, 4, 4 ]
[ 1, 1, 2, 4, 4 ]
[ 2, 2, 4, 4 ]
[ 1, 3, 4, 4 ]
[ 4, 4, 4 ]
o.order("lex,reversed")
[ 4, 4, 4 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 2, 1, 1 ]
[ 4, 4, 1, 1, 1, 1 ]
[ 4, 3, 3, 2 ]
[ 4, 3, 3, 1, 1 ]
[ 4, 3, 2, 2, 1 ]
[ 4, 3, 2, 1, 1, 1 ]
[ 4, 3, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 2 ]
[ 4, 2, 2, 2, 1, 1 ]
[ 4, 2, 2, 1, 1, 1, 1 ]
[ 4, 2, 1, 1, 1, 1, 1, 1 ]
[ 4, 1, 1, 1, 1, 1, 1, 1, 1 ]
o.random()
[ 4, 4, 3, 1 ]
o.dispose()
o = Abacus.Partition(17,{"max=":4})
o.total()
39
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 2, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 2, 2, 1 ]
[ 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 2, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 2, 2, 1, 1 ]
[ 4, 3, 2, 2, 2, 2, 2 ]
[ 4, 3, 3, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 3, 2, 1, 1, 1, 1, 1 ]
[ 4, 3, 3, 2, 2, 1, 1, 1 ]
[ 4, 3, 3, 2, 2, 2, 1 ]
[ 4, 3, 3, 3, 1, 1, 1, 1 ]
[ 4, 3, 3, 3, 2, 1, 1 ]
[ 4, 3, 3, 3, 2, 2 ]
[ 4, 3, 3, 3, 3, 1 ]
[ 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 2, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 2, 2, 1, 1, 1 ]
[ 4, 4, 2, 2, 2, 2, 1 ]
[ 4, 4, 3, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 3, 2, 1, 1, 1, 1 ]
[ 4, 4, 3, 2, 2, 1, 1 ]
[ 4, 4, 3, 2, 2, 2 ]
[ 4, 4, 3, 3, 1, 1, 1 ]
[ 4, 4, 3, 3, 2, 1 ]
[ 4, 4, 3, 3, 3 ]
[ 4, 4, 4, 1, 1, 1, 1, 1 ]
[ 4, 4, 4, 2, 1, 1, 1 ]
[ 4, 4, 4, 2, 2, 1 ]
[ 4, 4, 4, 3, 1, 1 ]
[ 4, 4, 4, 3, 2 ]
[ 4, 4, 4, 4, 1 ]
backwards
o.rewind(-1)
[ 4, 4, 4, 4, 1 ]
[ 4, 4, 4, 3, 2 ]
[ 4, 4, 4, 3, 1, 1 ]
[ 4, 4, 4, 2, 2, 1 ]
[ 4, 4, 4, 2, 1, 1, 1 ]
[ 4, 4, 4, 1, 1, 1, 1, 1 ]
[ 4, 4, 3, 3, 3 ]
[ 4, 4, 3, 3, 2, 1 ]
[ 4, 4, 3, 3, 1, 1, 1 ]
[ 4, 4, 3, 2, 2, 2 ]
[ 4, 4, 3, 2, 2, 1, 1 ]
[ 4, 4, 3, 2, 1, 1, 1, 1 ]
[ 4, 4, 3, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 2, 2, 2, 1 ]
[ 4, 4, 2, 2, 2, 1, 1, 1 ]
[ 4, 4, 2, 2, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 3, 3, 3, 1 ]
[ 4, 3, 3, 3, 2, 2 ]
[ 4, 3, 3, 3, 2, 1, 1 ]
[ 4, 3, 3, 3, 1, 1, 1, 1 ]
[ 4, 3, 3, 2, 2, 2, 1 ]
[ 4, 3, 3, 2, 2, 1, 1, 1 ]
[ 4, 3, 3, 2, 1, 1, 1, 1, 1 ]
[ 4, 3, 3, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 2, 2, 2 ]
[ 4, 3, 2, 2, 2, 2, 1, 1 ]
[ 4, 3, 2, 2, 2, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 2, 2, 1 ]
[ 4, 2, 2, 2, 2, 2, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 4 ]
[ 1, 1, 1, 1, 1, 2, 2, 2, 2, 4 ]
[ 1, 1, 1, 2, 2, 2, 2, 2, 4 ]
[ 1, 2, 2, 2, 2, 2, 2, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 4 ]
[ 1, 1, 1, 1, 1, 1, 2, 2, 3, 4 ]
[ 1, 1, 1, 1, 2, 2, 2, 3, 4 ]
[ 1, 1, 2, 2, 2, 2, 3, 4 ]
[ 2, 2, 2, 2, 2, 3, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 3, 3, 4 ]
[ 1, 1, 1, 1, 1, 2, 3, 3, 4 ]
[ 1, 1, 1, 2, 2, 3, 3, 4 ]
[ 1, 2, 2, 2, 3, 3, 4 ]
[ 1, 1, 1, 1, 3, 3, 3, 4 ]
[ 1, 1, 2, 3, 3, 3, 4 ]
[ 2, 2, 3, 3, 3, 4 ]
[ 1, 3, 3, 3, 3, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4 ]
[ 1, 1, 1, 1, 1, 1, 1, 2, 4, 4 ]
[ 1, 1, 1, 1, 1, 2, 2, 4, 4 ]
[ 1, 1, 1, 2, 2, 2, 4, 4 ]
[ 1, 2, 2, 2, 2, 4, 4 ]
[ 1, 1, 1, 1, 1, 1, 3, 4, 4 ]
[ 1, 1, 1, 1, 2, 3, 4, 4 ]
[ 1, 1, 2, 2, 3, 4, 4 ]
[ 2, 2, 2, 3, 4, 4 ]
[ 1, 1, 1, 3, 3, 4, 4 ]
[ 1, 2, 3, 3, 4, 4 ]
[ 3, 3, 3, 4, 4 ]
[ 1, 1, 1, 1, 1, 4, 4, 4 ]
[ 1, 1, 1, 2, 4, 4, 4 ]
[ 1, 2, 2, 4, 4, 4 ]
[ 1, 1, 3, 4, 4, 4 ]
[ 2, 3, 4, 4, 4 ]
[ 1, 4, 4, 4, 4 ]
o.order("lex,reversed")
[ 4, 4, 4, 4, 1 ]
[ 4, 4, 4, 3, 2 ]
[ 4, 4, 4, 3, 1, 1 ]
[ 4, 4, 4, 2, 2, 1 ]
[ 4, 4, 4, 2, 1, 1, 1 ]
[ 4, 4, 4, 1, 1, 1, 1, 1 ]
[ 4, 4, 3, 3, 3 ]
[ 4, 4, 3, 3, 2, 1 ]
[ 4, 4, 3, 3, 1, 1, 1 ]
[ 4, 4, 3, 2, 2, 2 ]
[ 4, 4, 3, 2, 2, 1, 1 ]
[ 4, 4, 3, 2, 1, 1, 1, 1 ]
[ 4, 4, 3, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 2, 2, 2, 1 ]
[ 4, 4, 2, 2, 2, 1, 1, 1 ]
[ 4, 4, 2, 2, 1, 1, 1, 1, 1 ]
[ 4, 4, 2, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 3, 3, 3, 1 ]
[ 4, 3, 3, 3, 2, 2 ]
[ 4, 3, 3, 3, 2, 1, 1 ]
[ 4, 3, 3, 3, 1, 1, 1, 1 ]
[ 4, 3, 3, 2, 2, 2, 1 ]
[ 4, 3, 3, 2, 2, 1, 1, 1 ]
[ 4, 3, 3, 2, 1, 1, 1, 1, 1 ]
[ 4, 3, 3, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 2, 2, 2 ]
[ 4, 3, 2, 2, 2, 2, 1, 1 ]
[ 4, 3, 2, 2, 2, 1, 1, 1, 1 ]
[ 4, 3, 2, 2, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 2, 2, 1 ]
[ 4, 2, 2, 2, 2, 2, 1, 1, 1 ]
[ 4, 2, 2, 2, 2, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
[ 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ]
o.random()
[ 4, 3, 3, 2, 2, 2, 1 ]
o.dispose()
o = Abacus.Partition(7,{"parts=":4,output:"conjugate"})
o.total()
3
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1 ]
[ 3, 2, 1, 1 ]
[ 2, 2, 2, 1 ]
o.rewind(-1)
[ 2, 2, 2, 1 ]
[ 3, 2, 1, 1 ]
[ 4, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 4 ]
[ 1, 1, 2, 3 ]
[ 1, 2, 2, 2 ]
o.order("lex,reversed")
[ 2, 2, 2, 1 ]
[ 3, 2, 1, 1 ]
[ 4, 1, 1, 1 ]
o.random()
[ 2, 2, 2, 1 ]
o.dispose()
o = Abacus.Partition(8,{"parts=":4,output:"conjugate"})
o.total()
5
default order is "lex", lexicographic-order
o.rewind()
[ 5, 1, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 3, 3, 1, 1 ]
[ 3, 2, 2, 1 ]
[ 2, 2, 2, 2 ]
o.rewind(-1)
[ 2, 2, 2, 2 ]
[ 3, 2, 2, 1 ]
[ 3, 3, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 5, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 5 ]
[ 1, 1, 2, 4 ]
[ 1, 1, 3, 3 ]
[ 1, 2, 2, 3 ]
[ 2, 2, 2, 2 ]
o.order("lex,reversed")
[ 2, 2, 2, 2 ]
[ 3, 2, 2, 1 ]
[ 3, 3, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 5, 1, 1, 1 ]
o.random()
[ 4, 2, 1, 1 ]
o.dispose()
o = Abacus.Partition(11,{"parts=":5,output:"conjugate"})
o.total()
10
default order is "lex", lexicographic-order
o.rewind()
[ 7, 1, 1, 1, 1 ]
[ 6, 2, 1, 1, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 4, 4, 1, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 4, 3, 2, 1, 1 ]
[ 3, 3, 3, 1, 1 ]
[ 4, 2, 2, 2, 1 ]
[ 3, 3, 2, 2, 1 ]
[ 3, 2, 2, 2, 2 ]
backwards
o.rewind(-1)
[ 3, 2, 2, 2, 2 ]
[ 3, 3, 2, 2, 1 ]
[ 4, 2, 2, 2, 1 ]
[ 3, 3, 3, 1, 1 ]
[ 4, 3, 2, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 4, 4, 1, 1, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 6, 2, 1, 1, 1 ]
[ 7, 1, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 1, 7 ]
[ 1, 1, 1, 2, 6 ]
[ 1, 1, 1, 3, 5 ]
[ 1, 1, 1, 4, 4 ]
[ 1, 1, 2, 2, 5 ]
[ 1, 1, 2, 3, 4 ]
[ 1, 1, 3, 3, 3 ]
[ 1, 2, 2, 2, 4 ]
[ 1, 2, 2, 3, 3 ]
[ 2, 2, 2, 2, 3 ]
o.order("lex,reversed")
[ 3, 2, 2, 2, 2 ]
[ 3, 3, 2, 2, 1 ]
[ 4, 2, 2, 2, 1 ]
[ 3, 3, 3, 1, 1 ]
[ 4, 3, 2, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 4, 4, 1, 1, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 6, 2, 1, 1, 1 ]
[ 7, 1, 1, 1, 1 ]
o.random()
[ 5, 2, 2, 1, 1 ]
o.dispose()
o = Abacus.Partition(12,{"parts=":4,output:"conjugate"})
o.total()
15
default order is "lex", lexicographic-order
o.rewind()
[ 9, 1, 1, 1 ]
[ 8, 2, 1, 1 ]
[ 7, 3, 1, 1 ]
[ 6, 4, 1, 1 ]
[ 5, 5, 1, 1 ]
[ 7, 2, 2, 1 ]
[ 6, 3, 2, 1 ]
[ 5, 4, 2, 1 ]
[ 5, 3, 3, 1 ]
[ 4, 4, 3, 1 ]
[ 6, 2, 2, 2 ]
[ 5, 3, 2, 2 ]
[ 4, 4, 2, 2 ]
[ 4, 3, 3, 2 ]
[ 3, 3, 3, 3 ]
o.rewind(-1)
[ 3, 3, 3, 3 ]
[ 4, 3, 3, 2 ]
[ 4, 4, 2, 2 ]
[ 5, 3, 2, 2 ]
[ 6, 2, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 5, 3, 3, 1 ]
[ 5, 4, 2, 1 ]
[ 6, 3, 2, 1 ]
[ 7, 2, 2, 1 ]
[ 5, 5, 1, 1 ]
[ 6, 4, 1, 1 ]
[ 7, 3, 1, 1 ]
[ 8, 2, 1, 1 ]
[ 9, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 9 ]
[ 1, 1, 2, 8 ]
[ 1, 1, 3, 7 ]
[ 1, 1, 4, 6 ]
[ 1, 1, 5, 5 ]
[ 1, 2, 2, 7 ]
[ 1, 2, 3, 6 ]
[ 1, 2, 4, 5 ]
[ 1, 3, 3, 5 ]
[ 1, 3, 4, 4 ]
[ 2, 2, 2, 6 ]
[ 2, 2, 3, 5 ]
[ 2, 2, 4, 4 ]
[ 2, 3, 3, 4 ]
[ 3, 3, 3, 3 ]
o.order("lex,reversed")
[ 3, 3, 3, 3 ]
[ 4, 3, 3, 2 ]
[ 4, 4, 2, 2 ]
[ 5, 3, 2, 2 ]
[ 6, 2, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 5, 3, 3, 1 ]
[ 5, 4, 2, 1 ]
[ 6, 3, 2, 1 ]
[ 7, 2, 2, 1 ]
[ 5, 5, 1, 1 ]
[ 6, 4, 1, 1 ]
[ 7, 3, 1, 1 ]
[ 8, 2, 1, 1 ]
[ 9, 1, 1, 1 ]
o.random()
[ 4, 4, 3, 1 ]
o.dispose()
o = Abacus.Partition(20,{"parts=":4,output:"conjugate"})
o.total()
64
default order is "lex", lexicographic-order
o.rewind()
[ 17, 1, 1, 1 ]
[ 16, 2, 1, 1 ]
[ 15, 3, 1, 1 ]
[ 14, 4, 1, 1 ]
[ 13, 5, 1, 1 ]
[ 12, 6, 1, 1 ]
[ 11, 7, 1, 1 ]
[ 10, 8, 1, 1 ]
[ 9, 9, 1, 1 ]
[ 15, 2, 2, 1 ]
[ 14, 3, 2, 1 ]
[ 13, 4, 2, 1 ]
[ 12, 5, 2, 1 ]
[ 11, 6, 2, 1 ]
[ 10, 7, 2, 1 ]
[ 9, 8, 2, 1 ]
[ 13, 3, 3, 1 ]
[ 12, 4, 3, 1 ]
[ 11, 5, 3, 1 ]
[ 10, 6, 3, 1 ]
[ 9, 7, 3, 1 ]
[ 8, 8, 3, 1 ]
[ 11, 4, 4, 1 ]
[ 10, 5, 4, 1 ]
[ 9, 6, 4, 1 ]
[ 8, 7, 4, 1 ]
[ 9, 5, 5, 1 ]
[ 8, 6, 5, 1 ]
[ 7, 7, 5, 1 ]
[ 7, 6, 6, 1 ]
[ 14, 2, 2, 2 ]
[ 13, 3, 2, 2 ]
[ 12, 4, 2, 2 ]
[ 11, 5, 2, 2 ]
[ 10, 6, 2, 2 ]
[ 9, 7, 2, 2 ]
[ 8, 8, 2, 2 ]
[ 12, 3, 3, 2 ]
[ 11, 4, 3, 2 ]
[ 10, 5, 3, 2 ]
[ 9, 6, 3, 2 ]
[ 8, 7, 3, 2 ]
[ 10, 4, 4, 2 ]
[ 9, 5, 4, 2 ]
[ 8, 6, 4, 2 ]
[ 7, 7, 4, 2 ]
[ 8, 5, 5, 2 ]
[ 7, 6, 5, 2 ]
[ 6, 6, 6, 2 ]
[ 11, 3, 3, 3 ]
[ 10, 4, 3, 3 ]
[ 9, 5, 3, 3 ]
[ 8, 6, 3, 3 ]
[ 7, 7, 3, 3 ]
[ 9, 4, 4, 3 ]
[ 8, 5, 4, 3 ]
[ 7, 6, 4, 3 ]
[ 7, 5, 5, 3 ]
[ 6, 6, 5, 3 ]
[ 8, 4, 4, 4 ]
[ 7, 5, 4, 4 ]
[ 6, 6, 4, 4 ]
[ 6, 5, 5, 4 ]
[ 5, 5, 5, 5 ]
o.rewind(-1)
[ 5, 5, 5, 5 ]
[ 6, 5, 5, 4 ]
[ 6, 6, 4, 4 ]
[ 7, 5, 4, 4 ]
[ 8, 4, 4, 4 ]
[ 6, 6, 5, 3 ]
[ 7, 5, 5, 3 ]
[ 7, 6, 4, 3 ]
[ 8, 5, 4, 3 ]
[ 9, 4, 4, 3 ]
[ 7, 7, 3, 3 ]
[ 8, 6, 3, 3 ]
[ 9, 5, 3, 3 ]
[ 10, 4, 3, 3 ]
[ 11, 3, 3, 3 ]
[ 6, 6, 6, 2 ]
[ 7, 6, 5, 2 ]
[ 8, 5, 5, 2 ]
[ 7, 7, 4, 2 ]
[ 8, 6, 4, 2 ]
[ 9, 5, 4, 2 ]
[ 10, 4, 4, 2 ]
[ 8, 7, 3, 2 ]
[ 9, 6, 3, 2 ]
[ 10, 5, 3, 2 ]
[ 11, 4, 3, 2 ]
[ 12, 3, 3, 2 ]
[ 8, 8, 2, 2 ]
[ 9, 7, 2, 2 ]
[ 10, 6, 2, 2 ]
[ 11, 5, 2, 2 ]
[ 12, 4, 2, 2 ]
[ 13, 3, 2, 2 ]
[ 14, 2, 2, 2 ]
[ 7, 6, 6, 1 ]
[ 7, 7, 5, 1 ]
[ 8, 6, 5, 1 ]
[ 9, 5, 5, 1 ]
[ 8, 7, 4, 1 ]
[ 9, 6, 4, 1 ]
[ 10, 5, 4, 1 ]
[ 11, 4, 4, 1 ]
[ 8, 8, 3, 1 ]
[ 9, 7, 3, 1 ]
[ 10, 6, 3, 1 ]
[ 11, 5, 3, 1 ]
[ 12, 4, 3, 1 ]
[ 13, 3, 3, 1 ]
[ 9, 8, 2, 1 ]
[ 10, 7, 2, 1 ]
[ 11, 6, 2, 1 ]
[ 12, 5, 2, 1 ]
[ 13, 4, 2, 1 ]
[ 14, 3, 2, 1 ]
[ 15, 2, 2, 1 ]
[ 9, 9, 1, 1 ]
[ 10, 8, 1, 1 ]
[ 11, 7, 1, 1 ]
[ 12, 6, 1, 1 ]
[ 13, 5, 1, 1 ]
[ 14, 4, 1, 1 ]
[ 15, 3, 1, 1 ]
[ 16, 2, 1, 1 ]
[ 17, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 17 ]
[ 1, 1, 2, 16 ]
[ 1, 1, 3, 15 ]
[ 1, 1, 4, 14 ]
[ 1, 1, 5, 13 ]
[ 1, 1, 6, 12 ]
[ 1, 1, 7, 11 ]
[ 1, 1, 8, 10 ]
[ 1, 1, 9, 9 ]
[ 1, 2, 2, 15 ]
[ 1, 2, 3, 14 ]
[ 1, 2, 4, 13 ]
[ 1, 2, 5, 12 ]
[ 1, 2, 6, 11 ]
[ 1, 2, 7, 10 ]
[ 1, 2, 8, 9 ]
[ 1, 3, 3, 13 ]
[ 1, 3, 4, 12 ]
[ 1, 3, 5, 11 ]
[ 1, 3, 6, 10 ]
[ 1, 3, 7, 9 ]
[ 1, 3, 8, 8 ]
[ 1, 4, 4, 11 ]
[ 1, 4, 5, 10 ]
[ 1, 4, 6, 9 ]
[ 1, 4, 7, 8 ]
[ 1, 5, 5, 9 ]
[ 1, 5, 6, 8 ]
[ 1, 5, 7, 7 ]
[ 1, 6, 6, 7 ]
[ 2, 2, 2, 14 ]
[ 2, 2, 3, 13 ]
[ 2, 2, 4, 12 ]
[ 2, 2, 5, 11 ]
[ 2, 2, 6, 10 ]
[ 2, 2, 7, 9 ]
[ 2, 2, 8, 8 ]
[ 2, 3, 3, 12 ]
[ 2, 3, 4, 11 ]
[ 2, 3, 5, 10 ]
[ 2, 3, 6, 9 ]
[ 2, 3, 7, 8 ]
[ 2, 4, 4, 10 ]
[ 2, 4, 5, 9 ]
[ 2, 4, 6, 8 ]
[ 2, 4, 7, 7 ]
[ 2, 5, 5, 8 ]
[ 2, 5, 6, 7 ]
[ 2, 6, 6, 6 ]
[ 3, 3, 3, 11 ]
[ 3, 3, 4, 10 ]
[ 3, 3, 5, 9 ]
[ 3, 3, 6, 8 ]
[ 3, 3, 7, 7 ]
[ 3, 4, 4, 9 ]
[ 3, 4, 5, 8 ]
[ 3, 4, 6, 7 ]
[ 3, 5, 5, 7 ]
[ 3, 5, 6, 6 ]
[ 4, 4, 4, 8 ]
[ 4, 4, 5, 7 ]
[ 4, 4, 6, 6 ]
[ 4, 5, 5, 6 ]
[ 5, 5, 5, 5 ]
o.order("lex,reversed")
[ 5, 5, 5, 5 ]
[ 6, 5, 5, 4 ]
[ 6, 6, 4, 4 ]
[ 7, 5, 4, 4 ]
[ 8, 4, 4, 4 ]
[ 6, 6, 5, 3 ]
[ 7, 5, 5, 3 ]
[ 7, 6, 4, 3 ]
[ 8, 5, 4, 3 ]
[ 9, 4, 4, 3 ]
[ 7, 7, 3, 3 ]
[ 8, 6, 3, 3 ]
[ 9, 5, 3, 3 ]
[ 10, 4, 3, 3 ]
[ 11, 3, 3, 3 ]
[ 6, 6, 6, 2 ]
[ 7, 6, 5, 2 ]
[ 8, 5, 5, 2 ]
[ 7, 7, 4, 2 ]
[ 8, 6, 4, 2 ]
[ 9, 5, 4, 2 ]
[ 10, 4, 4, 2 ]
[ 8, 7, 3, 2 ]
[ 9, 6, 3, 2 ]
[ 10, 5, 3, 2 ]
[ 11, 4, 3, 2 ]
[ 12, 3, 3, 2 ]
[ 8, 8, 2, 2 ]
[ 9, 7, 2, 2 ]
[ 10, 6, 2, 2 ]
[ 11, 5, 2, 2 ]
[ 12, 4, 2, 2 ]
[ 13, 3, 2, 2 ]
[ 14, 2, 2, 2 ]
[ 7, 6, 6, 1 ]
[ 7, 7, 5, 1 ]
[ 8, 6, 5, 1 ]
[ 9, 5, 5, 1 ]
[ 8, 7, 4, 1 ]
[ 9, 6, 4, 1 ]
[ 10, 5, 4, 1 ]
[ 11, 4, 4, 1 ]
[ 8, 8, 3, 1 ]
[ 9, 7, 3, 1 ]
[ 10, 6, 3, 1 ]
[ 11, 5, 3, 1 ]
[ 12, 4, 3, 1 ]
[ 13, 3, 3, 1 ]
[ 9, 8, 2, 1 ]
[ 10, 7, 2, 1 ]
[ 11, 6, 2, 1 ]
[ 12, 5, 2, 1 ]
[ 13, 4, 2, 1 ]
[ 14, 3, 2, 1 ]
[ 15, 2, 2, 1 ]
[ 9, 9, 1, 1 ]
[ 10, 8, 1, 1 ]
[ 11, 7, 1, 1 ]
[ 12, 6, 1, 1 ]
[ 13, 5, 1, 1 ]
[ 14, 4, 1, 1 ]
[ 15, 3, 1, 1 ]
[ 16, 2, 1, 1 ]
[ 17, 1, 1, 1 ]
o.random()
[ 12, 4, 3, 1 ]
o.dispose()
o = Abacus.Partition(12,{"parts=":4,"max=":4})
o.total()
3
default order is "lex", lexicographic-order
o.rewind()
[ 4, 3, 3, 2 ]
o.rewind(-1)
[ 4, 4, 3, 1 ]
o.random()
null
o.dispose()
o = Abacus.Partition(20,{"parts=":4,"max=":7})
o.total()
8
default order is "lex", lexicographic-order
o.rewind()
[ 7, 5, 5, 3 ]
o.rewind(-1)
[ 7, 7, 5, 1 ]
o.dispose()
