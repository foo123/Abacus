Abacus.Partitions (VERSION = 1.0.6)
---
o = Abacus.Partition(7,{"max=":4})
o.total()
3
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1 ]
[ 4, 2, 1 ]
[ 4, 3 ]
backwards
o.rewind(-1)
[ 4, 3 ]
[ 4, 2, 1 ]
[ 4, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 4 ]
[ 1, 2, 4 ]
[ 3, 4 ]
o.order("lex,reversed")
[ 4, 3 ]
[ 4, 2, 1 ]
[ 4, 1, 1, 1 ]
o.order("colex")
[ 4, 3 ]
o.order("colex,reflected")
[ 3, 4 ]
o.order("colex,reversed")
[ 4, 1, 1, 1 ]
o.random()
[ 4, 2, 1 ]
o.dispose()
o = Abacus.Partition(7,{"min=":3})
o.total()
1
default order is "lex", lexicographic-order
o.rewind()
[ 4, 3 ]
backwards
o.rewind(-1)
[ 4, 3 ]
o.dispose()
o = Abacus.Partition(7,{"min=":3,"max=":4})
o.total()
1
default order is "lex", lexicographic-order
o.rewind()
[ 4, 3 ]
backwards
o.rewind(-1)
[ 4, 3 ]
o.dispose()
o = Abacus.Partition(7,{"min=":3,"parts=":2})
o.total()
1
default order is "lex", lexicographic-order
o.rewind()
[ 4, 3 ]
backwards
o.rewind(-1)
[ 4, 3 ]
o.dispose()
o = Abacus.Partition(7,{"min=":3,"max=":4,"parts=":2})
o.total()
1
default order is "lex", lexicographic-order
o.rewind()
[ 4, 3 ]
backwards
o.rewind(-1)
[ 4, 3 ]
o.dispose()
o = Abacus.Partition(14,{"min=":3})
o.total()
6
default order is "lex", lexicographic-order
o.rewind()
[ 4, 4, 3, 3 ]
backwards
o.rewind(-1)
[ 11, 3 ]
o.dispose()
o = Abacus.Partition(14,{"min=":3,"max=":4})
o.total()
1
default order is "lex", lexicographic-order
o.rewind()
[ 4, 4, 3, 3 ]
backwards
o.rewind(-1)
[ 4, 4, 3, 3 ]
o.dispose()
o = Abacus.Partition(14,{"min=":3,"parts=":4})
o.total()
2
default order is "lex", lexicographic-order
o.rewind()
[ 4, 4, 3, 3 ]
backwards
o.rewind(-1)
[ 5, 3, 3, 3 ]
o.dispose()
o = Abacus.Partition(14,{"min=":3,"max=":4,"parts=":4})
o.total()
1
default order is "lex", lexicographic-order
o.rewind()
[ 4, 4, 3, 3 ]
backwards
o.rewind(-1)
[ 4, 4, 3, 3 ]
o.dispose()
o = Abacus.Partition(8,{"max=":4})
o.total()
5
default order is "lex", lexicographic-order
o.rewind()
[ 4, 1, 1, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 4, 2, 2 ]
[ 4, 3, 1 ]
[ 4, 4 ]
backwards
o.rewind(-1)
[ 4, 4 ]
[ 4, 3, 1 ]
[ 4, 2, 2 ]
[ 4, 2, 1, 1 ]
[ 4, 1, 1, 1, 1 ]
o.order("lex,reflected")
[ 1, 1, 1, 1, 4 ]
[ 1, 1, 2, 4 ]
[ 2, 2, 4 ]
[ 1, 3, 4 ]
[ 4, 4 ]
o.order("lex,reversed")
[ 4, 4 ]
[ 4, 3, 1 ]
[ 4, 2, 2 ]
[ 4, 2, 1, 1 ]
[ 4, 1, 1, 1, 1 ]
o.random()
[ 4, 3, 1 ]
o.dispose()
o = Abacus.Partition(11,{"max=":5})
o.total()
10
default order is "lex", lexicographic-order
o.rewind()
[
  5, 1, 1, 1,
  1, 1, 1
]
[ 5, 2, 1, 1, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 2, 2, 2 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 3, 2, 1 ]
[ 5, 3, 3 ]
[ 5, 4, 1, 1 ]
[ 5, 4, 2 ]
[ 5, 5, 1 ]
backwards
o.rewind(-1)
[ 5, 5, 1 ]
[ 5, 4, 2 ]
[ 5, 4, 1, 1 ]
[ 5, 3, 3 ]
[ 5, 3, 2, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 2, 2, 2 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 2, 1, 1, 1, 1 ]
[
  5, 1, 1, 1,
  1, 1, 1
]
o.order("lex,reflected")
[
  1, 1, 1, 1,
  1, 1, 5
]
[ 1, 1, 1, 1, 2, 5 ]
[ 1, 1, 2, 2, 5 ]
[ 2, 2, 2, 5 ]
[ 1, 1, 1, 3, 5 ]
[ 1, 2, 3, 5 ]
[ 3, 3, 5 ]
[ 1, 1, 4, 5 ]
[ 2, 4, 5 ]
[ 1, 5, 5 ]
o.order("lex,reversed")
[ 5, 5, 1 ]
[ 5, 4, 2 ]
[ 5, 4, 1, 1 ]
[ 5, 3, 3 ]
[ 5, 3, 2, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 2, 2, 2 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 2, 1, 1, 1, 1 ]
[
  5, 1, 1, 1,
  1, 1, 1
]
o.random()
[ 5, 3, 1, 1, 1 ]
o.dispose()
o = Abacus.Partition(12,{"max=":4})
o.total()
15
default order is "lex", lexicographic-order
o.rewind()
[
  4, 1, 1, 1, 1,
  1, 1, 1, 1
]
[
  4, 2, 1, 1,
  1, 1, 1, 1
]
[
  4, 2, 2, 1,
  1, 1, 1
]
[ 4, 2, 2, 2, 1, 1 ]
[ 4, 2, 2, 2, 2 ]
[
  4, 3, 1, 1,
  1, 1, 1
]
[ 4, 3, 2, 1, 1, 1 ]
[ 4, 3, 2, 2, 1 ]
[ 4, 3, 3, 1, 1 ]
[ 4, 3, 3, 2 ]
[ 4, 4, 1, 1, 1, 1 ]
[ 4, 4, 2, 1, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 4 ]
backwards
o.rewind(-1)
[ 4, 4, 4 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 2, 1, 1 ]
[ 4, 4, 1, 1, 1, 1 ]
[ 4, 3, 3, 2 ]
[ 4, 3, 3, 1, 1 ]
[ 4, 3, 2, 2, 1 ]
[ 4, 3, 2, 1, 1, 1 ]
[
  4, 3, 1, 1,
  1, 1, 1
]
[ 4, 2, 2, 2, 2 ]
[ 4, 2, 2, 2, 1, 1 ]
[
  4, 2, 2, 1,
  1, 1, 1
]
[
  4, 2, 1, 1,
  1, 1, 1, 1
]
[
  4, 1, 1, 1, 1,
  1, 1, 1, 1
]
o.order("lex,reflected")
[
  1, 1, 1, 1, 1,
  1, 1, 1, 4
]
[
  1, 1, 1, 1,
  1, 1, 2, 4
]
[
  1, 1, 1, 1,
  2, 2, 4
]
[ 1, 1, 2, 2, 2, 4 ]
[ 2, 2, 2, 2, 4 ]
[
  1, 1, 1, 1,
  1, 3, 4
]
[ 1, 1, 1, 2, 3, 4 ]
[ 1, 2, 2, 3, 4 ]
[ 1, 1, 3, 3, 4 ]
[ 2, 3, 3, 4 ]
[ 1, 1, 1, 1, 4, 4 ]
[ 1, 1, 2, 4, 4 ]
[ 2, 2, 4, 4 ]
[ 1, 3, 4, 4 ]
[ 4, 4, 4 ]
o.order("lex,reversed")
[ 4, 4, 4 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 2, 1, 1 ]
[ 4, 4, 1, 1, 1, 1 ]
[ 4, 3, 3, 2 ]
[ 4, 3, 3, 1, 1 ]
[ 4, 3, 2, 2, 1 ]
[ 4, 3, 2, 1, 1, 1 ]
[
  4, 3, 1, 1,
  1, 1, 1
]
[ 4, 2, 2, 2, 2 ]
[ 4, 2, 2, 2, 1, 1 ]
[
  4, 2, 2, 1,
  1, 1, 1
]
[
  4, 2, 1, 1,
  1, 1, 1, 1
]
[
  4, 1, 1, 1, 1,
  1, 1, 1, 1
]
o.random()
[ 4, 3, 3, 2 ]
o.dispose()
o = Abacus.Partition(17,{"max=":4})
o.total()
39
default order is "lex", lexicographic-order
o.rewind()
[
  4, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1, 1
]
[
  4, 2, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1
]
[
  4, 2, 2, 1, 1,
  1, 1, 1, 1, 1,
  1, 1
]
[
  4, 2, 2, 2, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 2, 2, 2, 2,
  1, 1, 1, 1, 1
]
[
  4, 2, 2, 2, 2,
  2, 1, 1, 1
]
[
  4, 2, 2, 2,
  2, 2, 2, 1
]
[
  4, 3, 1, 1, 1,
  1, 1, 1, 1, 1,
  1, 1
]
[
  4, 3, 2, 1, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 3, 2, 2, 1,
  1, 1, 1, 1, 1
]
[
  4, 3, 2, 2, 2,
  1, 1, 1, 1
]
[
  4, 3, 2, 2,
  2, 2, 1, 1
]
[
  4, 3, 2, 2,
  2, 2, 2
]
[
  4, 3, 3, 1, 1,
  1, 1, 1, 1, 1
]
[
  4, 3, 3, 2, 1,
  1, 1, 1, 1
]
[
  4, 3, 3, 2,
  2, 1, 1, 1
]
[
  4, 3, 3, 2,
  2, 2, 1
]
[
  4, 3, 3, 3,
  1, 1, 1, 1
]
[
  4, 3, 3, 3,
  2, 1, 1
]
[ 4, 3, 3, 3, 2, 2 ]
[ 4, 3, 3, 3, 3, 1 ]
[
  4, 4, 1, 1, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 4, 2, 1, 1,
  1, 1, 1, 1, 1
]
[
  4, 4, 2, 2, 1,
  1, 1, 1, 1
]
[
  4, 4, 2, 2,
  2, 1, 1, 1
]
[
  4, 4, 2, 2,
  2, 2, 1
]
[
  4, 4, 3, 1, 1,
  1, 1, 1, 1
]
[
  4, 4, 3, 2,
  1, 1, 1, 1
]
[
  4, 4, 3, 2,
  2, 1, 1
]
[ 4, 4, 3, 2, 2, 2 ]
[
  4, 4, 3, 3,
  1, 1, 1
]
[ 4, 4, 3, 3, 2, 1 ]
[ 4, 4, 3, 3, 3 ]
[
  4, 4, 4, 1,
  1, 1, 1, 1
]
[
  4, 4, 4, 2,
  1, 1, 1
]
[ 4, 4, 4, 2, 2, 1 ]
[ 4, 4, 4, 3, 1, 1 ]
[ 4, 4, 4, 3, 2 ]
[ 4, 4, 4, 4, 1 ]
backwards
o.rewind(-1)
[ 4, 4, 4, 4, 1 ]
[ 4, 4, 4, 3, 2 ]
[ 4, 4, 4, 3, 1, 1 ]
[ 4, 4, 4, 2, 2, 1 ]
[
  4, 4, 4, 2,
  1, 1, 1
]
[
  4, 4, 4, 1,
  1, 1, 1, 1
]
[ 4, 4, 3, 3, 3 ]
[ 4, 4, 3, 3, 2, 1 ]
[
  4, 4, 3, 3,
  1, 1, 1
]
[ 4, 4, 3, 2, 2, 2 ]
[
  4, 4, 3, 2,
  2, 1, 1
]
[
  4, 4, 3, 2,
  1, 1, 1, 1
]
[
  4, 4, 3, 1, 1,
  1, 1, 1, 1
]
[
  4, 4, 2, 2,
  2, 2, 1
]
[
  4, 4, 2, 2,
  2, 1, 1, 1
]
[
  4, 4, 2, 2, 1,
  1, 1, 1, 1
]
[
  4, 4, 2, 1, 1,
  1, 1, 1, 1, 1
]
[
  4, 4, 1, 1, 1,
  1, 1, 1, 1, 1,
  1
]
[ 4, 3, 3, 3, 3, 1 ]
[ 4, 3, 3, 3, 2, 2 ]
[
  4, 3, 3, 3,
  2, 1, 1
]
[
  4, 3, 3, 3,
  1, 1, 1, 1
]
[
  4, 3, 3, 2,
  2, 2, 1
]
[
  4, 3, 3, 2,
  2, 1, 1, 1
]
[
  4, 3, 3, 2, 1,
  1, 1, 1, 1
]
[
  4, 3, 3, 1, 1,
  1, 1, 1, 1, 1
]
[
  4, 3, 2, 2,
  2, 2, 2
]
[
  4, 3, 2, 2,
  2, 2, 1, 1
]
[
  4, 3, 2, 2, 2,
  1, 1, 1, 1
]
[
  4, 3, 2, 2, 1,
  1, 1, 1, 1, 1
]
[
  4, 3, 2, 1, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 3, 1, 1, 1,
  1, 1, 1, 1, 1,
  1, 1
]
[
  4, 2, 2, 2,
  2, 2, 2, 1
]
[
  4, 2, 2, 2, 2,
  2, 1, 1, 1
]
[
  4, 2, 2, 2, 2,
  1, 1, 1, 1, 1
]
[
  4, 2, 2, 2, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 2, 2, 1, 1,
  1, 1, 1, 1, 1,
  1, 1
]
[
  4, 2, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1
]
[
  4, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1, 1
]
o.order("lex,reflected")
[
  1, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1, 4
]
[
  1, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 2,
  4
]
[
  1, 1, 1, 1, 1,
  1, 1, 1, 1, 2,
  2, 4
]
[
  1, 1, 1, 1, 1,
  1, 1, 2, 2, 2,
  4
]
[
  1, 1, 1, 1, 1,
  2, 2, 2, 2, 4
]
[
  1, 1, 1, 2, 2,
  2, 2, 2, 4
]
[
  1, 2, 2, 2,
  2, 2, 2, 4
]
[
  1, 1, 1, 1, 1,
  1, 1, 1, 1, 1,
  3, 4
]
[
  1, 1, 1, 1, 1,
  1, 1, 1, 2, 3,
  4
]
[
  1, 1, 1, 1, 1,
  1, 2, 2, 3, 4
]
[
  1, 1, 1, 1, 2,
  2, 2, 3, 4
]
[
  1, 1, 2, 2,
  2, 2, 3, 4
]
[
  2, 2, 2, 2,
  2, 3, 4
]
[
  1, 1, 1, 1, 1,
  1, 1, 3, 3, 4
]
[
  1, 1, 1, 1, 1,
  2, 3, 3, 4
]
[
  1, 1, 1, 2,
  2, 3, 3, 4
]
[
  1, 2, 2, 2,
  3, 3, 4
]
[
  1, 1, 1, 1,
  3, 3, 3, 4
]
[
  1, 1, 2, 3,
  3, 3, 4
]
[ 2, 2, 3, 3, 3, 4 ]
[ 1, 3, 3, 3, 3, 4 ]
[
  1, 1, 1, 1, 1,
  1, 1, 1, 1, 4,
  4
]
[
  1, 1, 1, 1, 1,
  1, 1, 2, 4, 4
]
[
  1, 1, 1, 1, 1,
  2, 2, 4, 4
]
[
  1, 1, 1, 2,
  2, 2, 4, 4
]
[
  1, 2, 2, 2,
  2, 4, 4
]
[
  1, 1, 1, 1, 1,
  1, 3, 4, 4
]
[
  1, 1, 1, 1,
  2, 3, 4, 4
]
[
  1, 1, 2, 2,
  3, 4, 4
]
[ 2, 2, 2, 3, 4, 4 ]
[
  1, 1, 1, 3,
  3, 4, 4
]
[ 1, 2, 3, 3, 4, 4 ]
[ 3, 3, 3, 4, 4 ]
[
  1, 1, 1, 1,
  1, 4, 4, 4
]
[
  1, 1, 1, 2,
  4, 4, 4
]
[ 1, 2, 2, 4, 4, 4 ]
[ 1, 1, 3, 4, 4, 4 ]
[ 2, 3, 4, 4, 4 ]
[ 1, 4, 4, 4, 4 ]
o.order("lex,reversed")
[ 4, 4, 4, 4, 1 ]
[ 4, 4, 4, 3, 2 ]
[ 4, 4, 4, 3, 1, 1 ]
[ 4, 4, 4, 2, 2, 1 ]
[
  4, 4, 4, 2,
  1, 1, 1
]
[
  4, 4, 4, 1,
  1, 1, 1, 1
]
[ 4, 4, 3, 3, 3 ]
[ 4, 4, 3, 3, 2, 1 ]
[
  4, 4, 3, 3,
  1, 1, 1
]
[ 4, 4, 3, 2, 2, 2 ]
[
  4, 4, 3, 2,
  2, 1, 1
]
[
  4, 4, 3, 2,
  1, 1, 1, 1
]
[
  4, 4, 3, 1, 1,
  1, 1, 1, 1
]
[
  4, 4, 2, 2,
  2, 2, 1
]
[
  4, 4, 2, 2,
  2, 1, 1, 1
]
[
  4, 4, 2, 2, 1,
  1, 1, 1, 1
]
[
  4, 4, 2, 1, 1,
  1, 1, 1, 1, 1
]
[
  4, 4, 1, 1, 1,
  1, 1, 1, 1, 1,
  1
]
[ 4, 3, 3, 3, 3, 1 ]
[ 4, 3, 3, 3, 2, 2 ]
[
  4, 3, 3, 3,
  2, 1, 1
]
[
  4, 3, 3, 3,
  1, 1, 1, 1
]
[
  4, 3, 3, 2,
  2, 2, 1
]
[
  4, 3, 3, 2,
  2, 1, 1, 1
]
[
  4, 3, 3, 2, 1,
  1, 1, 1, 1
]
[
  4, 3, 3, 1, 1,
  1, 1, 1, 1, 1
]
[
  4, 3, 2, 2,
  2, 2, 2
]
[
  4, 3, 2, 2,
  2, 2, 1, 1
]
[
  4, 3, 2, 2, 2,
  1, 1, 1, 1
]
[
  4, 3, 2, 2, 1,
  1, 1, 1, 1, 1
]
[
  4, 3, 2, 1, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 3, 1, 1, 1,
  1, 1, 1, 1, 1,
  1, 1
]
[
  4, 2, 2, 2,
  2, 2, 2, 1
]
[
  4, 2, 2, 2, 2,
  2, 1, 1, 1
]
[
  4, 2, 2, 2, 2,
  1, 1, 1, 1, 1
]
[
  4, 2, 2, 2, 1,
  1, 1, 1, 1, 1,
  1
]
[
  4, 2, 2, 1, 1,
  1, 1, 1, 1, 1,
  1, 1
]
[
  4, 2, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1
]
[
  4, 1, 1, 1, 1, 1,
  1, 1, 1, 1, 1, 1,
  1, 1
]
o.random()
[
  4, 4, 2, 2, 1,
  1, 1, 1, 1
]
o.dispose()
o = Abacus.Partition(7,{"parts=":4})
o.total()
3
default order is "lex", lexicographic-order
o.rewind()
[ 2, 2, 2, 1 ]
[ 3, 2, 1, 1 ]
[ 4, 1, 1, 1 ]
o.rewind(-1)
[ 4, 1, 1, 1 ]
[ 3, 2, 1, 1 ]
[ 2, 2, 2, 1 ]
o.order("lex,reflected")
[ 1, 2, 2, 2 ]
[ 1, 1, 2, 3 ]
[ 1, 1, 1, 4 ]
o.order("lex,reversed")
[ 4, 1, 1, 1 ]
[ 3, 2, 1, 1 ]
[ 2, 2, 2, 1 ]
o.random()
[ 3, 2, 1, 1 ]
o.dispose()
o = Abacus.Partition(8,{"parts=":4})
o.total()
5
default order is "lex", lexicographic-order
o.rewind()
[ 2, 2, 2, 2 ]
[ 3, 2, 2, 1 ]
[ 3, 3, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 5, 1, 1, 1 ]
o.rewind(-1)
[ 5, 1, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 3, 3, 1, 1 ]
[ 3, 2, 2, 1 ]
[ 2, 2, 2, 2 ]
o.order("lex,reflected")
[ 2, 2, 2, 2 ]
[ 1, 2, 2, 3 ]
[ 1, 1, 3, 3 ]
[ 1, 1, 2, 4 ]
[ 1, 1, 1, 5 ]
o.order("lex,reversed")
[ 5, 1, 1, 1 ]
[ 4, 2, 1, 1 ]
[ 3, 3, 1, 1 ]
[ 3, 2, 2, 1 ]
[ 2, 2, 2, 2 ]
o.random()
[ 3, 3, 1, 1 ]
o.dispose()
o = Abacus.Partition(10,{"parts=":4})
o.total()
9
default order is "lex", lexicographic-order
o.rewind()
[ 3, 3, 2, 2 ]
[ 3, 3, 3, 1 ]
[ 4, 2, 2, 2 ]
[ 4, 3, 2, 1 ]
[ 4, 4, 1, 1 ]
[ 5, 2, 2, 1 ]
[ 5, 3, 1, 1 ]
[ 6, 2, 1, 1 ]
[ 7, 1, 1, 1 ]
o.rewind(-1)
[ 7, 1, 1, 1 ]
[ 6, 2, 1, 1 ]
[ 5, 3, 1, 1 ]
[ 5, 2, 2, 1 ]
[ 4, 4, 1, 1 ]
[ 4, 3, 2, 1 ]
[ 4, 2, 2, 2 ]
[ 3, 3, 3, 1 ]
[ 3, 3, 2, 2 ]
o.order("lex,reflected")
[ 2, 2, 3, 3 ]
[ 1, 3, 3, 3 ]
[ 2, 2, 2, 4 ]
[ 1, 2, 3, 4 ]
[ 1, 1, 4, 4 ]
[ 1, 2, 2, 5 ]
[ 1, 1, 3, 5 ]
[ 1, 1, 2, 6 ]
[ 1, 1, 1, 7 ]
o.order("lex,reversed")
[ 7, 1, 1, 1 ]
[ 6, 2, 1, 1 ]
[ 5, 3, 1, 1 ]
[ 5, 2, 2, 1 ]
[ 4, 4, 1, 1 ]
[ 4, 3, 2, 1 ]
[ 4, 2, 2, 2 ]
[ 3, 3, 3, 1 ]
[ 3, 3, 2, 2 ]
o.random()
[ 4, 3, 2, 1 ]
o.dispose()
o = Abacus.Partition(11,{"parts=":5})
o.total()
10
default order is "lex", lexicographic-order
o.rewind()
[ 3, 2, 2, 2, 2 ]
[ 3, 3, 2, 2, 1 ]
[ 3, 3, 3, 1, 1 ]
[ 4, 2, 2, 2, 1 ]
[ 4, 3, 2, 1, 1 ]
[ 4, 4, 1, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 6, 2, 1, 1, 1 ]
[ 7, 1, 1, 1, 1 ]
backwards
o.rewind(-1)
[ 7, 1, 1, 1, 1 ]
[ 6, 2, 1, 1, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 4, 4, 1, 1, 1 ]
[ 4, 3, 2, 1, 1 ]
[ 4, 2, 2, 2, 1 ]
[ 3, 3, 3, 1, 1 ]
[ 3, 3, 2, 2, 1 ]
[ 3, 2, 2, 2, 2 ]
o.order("lex,reflected")
[ 2, 2, 2, 2, 3 ]
[ 1, 2, 2, 3, 3 ]
[ 1, 1, 3, 3, 3 ]
[ 1, 2, 2, 2, 4 ]
[ 1, 1, 2, 3, 4 ]
[ 1, 1, 1, 4, 4 ]
[ 1, 1, 2, 2, 5 ]
[ 1, 1, 1, 3, 5 ]
[ 1, 1, 1, 2, 6 ]
[ 1, 1, 1, 1, 7 ]
o.order("lex,reversed")
[ 7, 1, 1, 1, 1 ]
[ 6, 2, 1, 1, 1 ]
[ 5, 3, 1, 1, 1 ]
[ 5, 2, 2, 1, 1 ]
[ 4, 4, 1, 1, 1 ]
[ 4, 3, 2, 1, 1 ]
[ 4, 2, 2, 2, 1 ]
[ 3, 3, 3, 1, 1 ]
[ 3, 3, 2, 2, 1 ]
[ 3, 2, 2, 2, 2 ]
o.random()
[ 3, 3, 2, 2, 1 ]
o.dispose()
o = Abacus.Partition(12,{"parts=":4})
o.total()
15
default order is "lex", lexicographic-order
o.rewind()
[ 3, 3, 3, 3 ]
[ 4, 3, 3, 2 ]
[ 4, 4, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 5, 3, 2, 2 ]
[ 5, 3, 3, 1 ]
[ 5, 4, 2, 1 ]
[ 5, 5, 1, 1 ]
[ 6, 2, 2, 2 ]
[ 6, 3, 2, 1 ]
[ 6, 4, 1, 1 ]
[ 7, 2, 2, 1 ]
[ 7, 3, 1, 1 ]
[ 8, 2, 1, 1 ]
[ 9, 1, 1, 1 ]
o.rewind(-1)
[ 9, 1, 1, 1 ]
[ 8, 2, 1, 1 ]
[ 7, 3, 1, 1 ]
[ 7, 2, 2, 1 ]
[ 6, 4, 1, 1 ]
[ 6, 3, 2, 1 ]
[ 6, 2, 2, 2 ]
[ 5, 5, 1, 1 ]
[ 5, 4, 2, 1 ]
[ 5, 3, 3, 1 ]
[ 5, 3, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 3, 3, 2 ]
[ 3, 3, 3, 3 ]
o.order("lex,reflected")
[ 3, 3, 3, 3 ]
[ 2, 3, 3, 4 ]
[ 2, 2, 4, 4 ]
[ 1, 3, 4, 4 ]
[ 2, 2, 3, 5 ]
[ 1, 3, 3, 5 ]
[ 1, 2, 4, 5 ]
[ 1, 1, 5, 5 ]
[ 2, 2, 2, 6 ]
[ 1, 2, 3, 6 ]
[ 1, 1, 4, 6 ]
[ 1, 2, 2, 7 ]
[ 1, 1, 3, 7 ]
[ 1, 1, 2, 8 ]
[ 1, 1, 1, 9 ]
o.order("lex,reversed")
[ 9, 1, 1, 1 ]
[ 8, 2, 1, 1 ]
[ 7, 3, 1, 1 ]
[ 7, 2, 2, 1 ]
[ 6, 4, 1, 1 ]
[ 6, 3, 2, 1 ]
[ 6, 2, 2, 2 ]
[ 5, 5, 1, 1 ]
[ 5, 4, 2, 1 ]
[ 5, 3, 3, 1 ]
[ 5, 3, 2, 2 ]
[ 4, 4, 3, 1 ]
[ 4, 4, 2, 2 ]
[ 4, 3, 3, 2 ]
[ 3, 3, 3, 3 ]
o.random()
[ 6, 3, 2, 1 ]
o.dispose()
o = Abacus.Partition(20,{"parts=":4,"max=":6})
o.total()
4
default order is "lex", lexicographic-order
o.rewind()
[ 6, 5, 5, 4 ]
[ 6, 6, 4, 4 ]
[ 6, 6, 5, 3 ]
[ 6, 6, 6, 2 ]
o.rewind(-1)
[ 6, 6, 6, 2 ]
[ 6, 6, 5, 3 ]
[ 6, 6, 4, 4 ]
[ 6, 5, 5, 4 ]
o.order("lex,reflected")
[ 4, 5, 5, 6 ]
[ 4, 4, 6, 6 ]
[ 3, 5, 6, 6 ]
[ 2, 6, 6, 6 ]
o.order("lex,reversed")
[ 6, 6, 6, 2 ]
[ 6, 6, 5, 3 ]
[ 6, 6, 4, 4 ]
[ 6, 5, 5, 4 ]
o.random()
[ 5, 5, 2, 2 ]
o.dispose()
o = Abacus.Partition(10,{"parts=":4,"max=":3})
o.total()
2
default order is "lex", lexicographic-order
o.rewind()
[ 3, 3, 2, 2 ]
[ 3, 3, 3, 1 ]
o.rewind(-1)
[ 3, 3, 3, 1 ]
[ 3, 3, 2, 2 ]
o.random()
[ 2, 2, 2, 1 ]
o.dispose()
o = Abacus.Partition(12,{"parts=":5,"max=":5})
o.total()
3
default order is "lex", lexicographic-order
o.rewind()
[ 5, 2, 2, 2, 1 ]
[ 5, 3, 2, 1, 1 ]
[ 5, 4, 1, 1, 1 ]
o.rewind(-1)
[ 5, 4, 1, 1, 1 ]
[ 5, 3, 2, 1, 1 ]
[ 5, 2, 2, 2, 1 ]
o.random()
[ 4, 2, 1, 1, 1 ]
o.dispose()
o = Abacus.Partition(20,{"parts=":5,"max=":5})
o.total()
5
default order is "lex", lexicographic-order
o.rewind()
[ 5, 4, 4, 4, 3 ]
[ 5, 5, 4, 3, 3 ]
[ 5, 5, 4, 4, 2 ]
[ 5, 5, 5, 3, 2 ]
[ 5, 5, 5, 4, 1 ]
o.rewind(-1)
[ 5, 5, 5, 4, 1 ]
[ 5, 5, 5, 3, 2 ]
[ 5, 5, 4, 4, 2 ]
[ 5, 5, 4, 3, 3 ]
[ 5, 4, 4, 4, 3 ]
o.dispose()
o = Abacus.Partition(51,{"max=":7,"parts=":8})
o.total()
7
default order is "lex", lexicographic-order
o.rewind()
[
  7, 7, 7, 6,
  6, 6, 6, 6
]
[
  7, 7, 7, 7,
  6, 6, 6, 5
]
[
  7, 7, 7, 7,
  7, 6, 5, 5
]
[
  7, 7, 7, 7,
  7, 6, 6, 4
]
[
  7, 7, 7, 7,
  7, 7, 5, 4
]
[
  7, 7, 7, 7,
  7, 7, 6, 3
]
[
  7, 7, 7, 7,
  7, 7, 7, 2
]
backwards
o.rewind(-1)
[
  7, 7, 7, 7,
  7, 7, 7, 2
]
[
  7, 7, 7, 7,
  7, 7, 6, 3
]
[
  7, 7, 7, 7,
  7, 7, 5, 4
]
[
  7, 7, 7, 7,
  7, 6, 6, 4
]
[
  7, 7, 7, 7,
  7, 6, 5, 5
]
[
  7, 7, 7, 7,
  6, 6, 6, 5
]
[
  7, 7, 7, 6,
  6, 6, 6, 6
]
